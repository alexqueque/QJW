<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QJW</name>
    </assembly>
    <members>
        <member name="T:QJW.Common.BarCodeHelper">
            <summary>
            条形码帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.BarCodeHelper.Get39Html(System.String,System.Int32,System.Int32)">
            <summary>
            获取12位39码的Html字符串
            </summary>
            <param name="s">转换的字符串</param>
            <param name="width">条码的宽度</param>
            <param name="height">条码的高度</param>
            <returns>html</returns>
        </member>
        <member name="M:QJW.Common.BarCodeHelper.GetEAN13Html(System.String,System.Int32,System.Int32)">
            <summary>
            获取EAN13码Html字符串
            </summary>
            <param name="s">转换的字符串</param>
            <param name="width">条码的宽度</param>
            <param name="height">条码的高度</param>
            <returns></returns>
        </member>
        <member name="T:QJW.Common.CacheHelper">
            <summary>
            缓存帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.CacheHelper.GetCache(System.String)">
            <summary>
            获取数据缓存
            </summary>
            <param name="CacheKey">键</param>
        </member>
        <member name="M:QJW.Common.CacheHelper.SetCache(System.String,System.Object)">
            <summary>
            设置数据缓存
            </summary>
        </member>
        <member name="M:QJW.Common.CacheHelper.SetCache(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置数据缓存
            </summary>
        </member>
        <member name="M:QJW.Common.CacheHelper.SetCache(System.String,System.Object,System.DateTime,System.TimeSpan)">
            <summary>
            设置数据缓存
            </summary>
        </member>
        <member name="M:QJW.Common.CacheHelper.RemoveAllCache(System.String)">
            <summary>
            移除指定数据缓存
            </summary>
        </member>
        <member name="M:QJW.Common.CacheHelper.RemoveAllCache">
            <summary>
            移除全部缓存
            </summary>
        </member>
        <member name="T:QJW.Common.WebConfigHelper">
            <summary>
            web.config操作类
            </summary>
        </member>
        <member name="M:QJW.Common.WebConfigHelper.GetConfigString(System.String)">
            <summary>
            得到AppSettings中的配置字符串信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.WebConfigHelper.GetConfigBool(System.String)">
            <summary>
            得到AppSettings中的配置Bool信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.WebConfigHelper.GetConfigDecimal(System.String)">
            <summary>
            得到AppSettings中的配置Decimal信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.WebConfigHelper.GetConfigInt(System.String)">
            <summary>
            得到AppSettings中的配置int信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:QJW.Common.ConvertHelper">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>    
        </member>
        <member name="M:QJW.Common.ConvertHelper.RepairZero(System.String,System.Int32)">
            <summary>
            指定字符串的固定长度，如果字符串小于固定长度，
            则在字符串的前面补足零，可设置的固定长度最大为9位
            </summary>
            <param name="text">原始字符串</param>
            <param name="limitedLength">字符串的固定长度</param>
        </member>
        <member name="M:QJW.Common.ConvertHelper.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:QJW.Common.ConvertHelper.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:QJW.Common.ConvertHelper.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            使用指定字符集将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:QJW.Common.ConvertHelper.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="T:QJW.Common.CookieHelper">
            <summary>
            Cookie帮助相关类
            </summary>
        </member>
        <member name="M:QJW.Common.CookieHelper.ClearCookie(System.String)">
            <summary>
            清除指定Cookie
            </summary>
            <param name="cookiename">cookiename</param>
        </member>
        <member name="M:QJW.Common.CookieHelper.GetCookieValue(System.String)">
            <summary>
            获取指定Cookie值
            </summary>
            <param name="cookiename">cookiename</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.CookieHelper.SetCookie(System.String,System.String)">
            <summary>
            添加一个Cookie（24小时过期）
            </summary>
            <param name="cookiename"></param>
            <param name="cookievalue"></param>
        </member>
        <member name="M:QJW.Common.CookieHelper.SetCookie(System.String,System.String,System.DateTime)">
            <summary>
            添加一个Cookie
            </summary>
            <param name="cookiename">cookie名</param>
            <param name="cookievalue">cookie值</param>
            <param name="expires">过期时间 DateTime</param>
        </member>
        <member name="T:QJW.Common.CsvHelper">
            <summary>
            CSV文件转换类
            </summary>
        </member>
        <member name="M:QJW.Common.CsvHelper.DtToCsv(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            导出报表为Csv
            </summary>
            <param name="dt">DataTable</param>
            <param name="strFilePath">物理路径</param>
            <param name="tableheader">表头</param>
            <param name="columname">字段标题,逗号分隔</param>
        </member>
        <member name="M:QJW.Common.CsvHelper.CsvToDt(System.String,System.Int32)">
            <summary>
            将Csv读入DataTable
            </summary>
            <param name="filePath">csv文件路径</param>
            <param name="n">表示第n行是字段title,第n+1行是记录开始</param>
        </member>
        <member name="T:QJW.Common.ChineseCalHelper">
            <summary>
            中国日历
            </summary>
        </member>
        <member name="T:QJW.Common.ChineseCalHelper.SolarHolidayStruct">
            <summary>
            阳历
            </summary>
        </member>
        <member name="T:QJW.Common.ChineseCalHelper.LunarHolidayStruct">
            <summary>
            农历
            </summary>
        </member>
        <member name="F:QJW.Common.ChineseCalHelper.LunarDateArray">
             <summary>
             来源于网上的农历数据
             </summary>
             <remarks>
             数据结构如下，共使用17位数据
             第17位：表示闰月天数，0表示29天   1表示30天
             第16位-第5位（共12位）表示12个月，其中第16位表示第一月，如果该月为30天则为1，29天为0
             第4位-第1位（共4位）表示闰月是哪个月，如果当年没有闰月，则置0
            </remarks>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.#ctor(System.DateTime)">
            <summary>
            用一个标准的公历日期来初使化
            </summary>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            用农历的日期来初使化
            </summary>
            <param name="cy">农历年</param>
            <param name="cm">农历月</param>
            <param name="cd">农历日</param>
            <param name="LeapFlag">闰月标志</param>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.GetChineseMonthDays(System.Int32,System.Int32)">
            <summary>
            //传回农历y年m月的总天数
            </summary>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.GetChineseLeapMonth(System.Int32)">
            <summary>
            传回农历 y年闰哪个月 1-12 , 没闰传回 0
            </summary>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.GetChineseLeapMonthDays(System.Int32)">
            <summary>
            传回农历y年闰月的天数
            </summary>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.GetChineseYearDays(System.Int32)">
            <summary>
            取农历年一年的天数
            </summary>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.GetChineseHour(System.DateTime)">
            <summary>
            获得当前时间的时辰
            </summary> 
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.CheckDateLimit(System.DateTime)">
            <summary>
            检查公历日期是否符合要求
            </summary>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.CheckChineseDateLimit(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            检查农历日期是否合理
            </summary>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.ConvertNumToChineseNum(System.Char)">
            <summary>
            将0-9转成汉字形式
            </summary>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.BitTest32(System.Int32,System.Int32)">
            <summary>
            测试某位是否为真
            </summary>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.ConvertDayOfWeek(System.DayOfWeek)">
            <summary>
            将星期几转成数字表示
            </summary>
        </member>
        <member name="M:QJW.Common.ChineseCalHelper.CompareWeekDayHoliday(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            比较当天是不是指定的第周几
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.newCalendarHoliday">
            <summary>
            计算中国农历节日
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.WeekDayHoliday">
            <summary>
            按某月第几周第几日计算的节日
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.DateHoliday">
            <summary>
            按公历日计算的节日
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.Date">
            <summary>
            取对应的公历日期
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.WeekDay">
            <summary>
            取星期几
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.WeekDayStr">
            <summary>
            周几的字符
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.DateString">
            <summary>
            公历日期中文表示法 如一九九七年七月一日
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.IsLeapYear">
            <summary>
            当前是否公历闰年
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.ChineseConstellation">
            <summary>
            28星宿计算
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.ChineseHour">
            <summary>
            时辰
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.IsChineseLeapMonth">
            <summary>
            是否闰月
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.IsChineseLeapYear">
            <summary>
            当年是否有闰月
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.ChineseDay">
            <summary>
            农历日
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.ChineseDayString">
            <summary>
            农历日中文表示
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.ChineseMonth">
            <summary>
            农历的月份
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.ChineseMonthString">
            <summary>
            农历月份字符串
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.ChineseYear">
            <summary>
            取农历年份
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.ChineseYearString">
            <summary>
            取农历年字符串如，一九九七年
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.ChineseDateString">
            <summary>
            取农历日期表示法：农历一九九七年正月初五
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.ChineseTwentyFourDay">
            <summary>
            定气法计算二十四节气,二十四节气是按地球公转来计算的，并非是阴历计算的
            </summary>
            <remarks>
            节气的定法有两种。古代历法采用的称为"恒气"，即按时间把一年等分为24份，
            每一节气平均得15天有余，所以又称"平气"。现代农历采用的称为"定气"，即
            按地球在轨道上的位置为标准，一周360°，两节气之间相隔15°。由于冬至时地
            球位于近日点附近，运动速度较快，因而太阳在黄道上移动15°的时间不到15天。
            夏至前后的情况正好相反，太阳在黄道上移动较慢，一个节气达16天之多。采用
            定气时可以保证春、秋两分必然在昼夜平分的那两天。
            </remarks>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.Constellation">
            <summary>
            计算指定日期的星座序号 
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.Animal">
            <summary>
            计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的
            鼠年为1,其它类推
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.AnimalString">
            <summary>
            取属相字符串
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.GanZhiYearString">
            <summary>
            取农历年的干支表示法如 乙丑年
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.GanZhiMonthString">
            <summary>
            取干支的月表示字符串，注意农历的闰月不记干支
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.GanZhiDayString">
            <summary>
            取干支日表示法
            </summary>
        </member>
        <member name="P:QJW.Common.ChineseCalHelper.GanZhiDateString">
            <summary>
            取当前日期的干支表示法如 甲子年乙丑月丙庚日
            </summary>
        </member>
        <member name="T:QJW.Common.TimeHelper">
            <summary>
            时间帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.TimeHelper.SecondToMinute(System.Int32)">
            <summary>
            把秒转换成分钟
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.TimeHelper.DateDiff2(System.DateTime,System.DateTime)">
            <summary>
            获得两个日期的间隔
            </summary>
            <param name="DateTime1">日期一。</param>
            <param name="DateTime2">日期二。</param>
            <returns>日期间隔TimeSpan。</returns>
        </member>
        <member name="M:QJW.Common.TimeHelper.FormatDate(System.DateTime,System.String)">
            <summary>
            格式化日期时间
            </summary>
            <param name="dateTime1">日期时间</param>
            <param name="dateMode">显示模式</param>
            <returns>0-9种模式的日期</returns>
        </member>
        <member name="M:QJW.Common.TimeHelper.GetFormatDate(System.DateTime,System.Char)">
            <summary>
            将时间格式化成 年月日 的形式,如果时间为null，返回当前系统时间
            </summary>
            <param name="dt">年月日分隔符</param>
            <param name="Separator"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.TimeHelper.GetFormatTime(System.DateTime,System.Char)">
            <summary>
            将时间格式化成 时分秒 的形式,如果时间为null，返回当前系统时间
            </summary>
            <param name="dt"></param>
            <param name="Separator"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.TimeHelper.GetRandomTime(System.DateTime,System.DateTime)">
            <summary>
            得到随机日期
            </summary>
            <param name="time1">起始日期</param>
            <param name="time2">结束日期</param>
            <returns>间隔日期之间的 随机日期</returns>
        </member>
        <member name="M:QJW.Common.TimeHelper.GetMonthLastDate(System.Int32,System.Int32)">
            <summary>
            返回某年某月最后一天
            </summary>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <returns>日</returns>
        </member>
        <member name="M:QJW.Common.TimeHelper.ReturnDateFormat(System.Int32,System.String@,System.String@)">
            <summary>
            返回每月的第一天和最后一天
            </summary>
            <param name="month"></param>
            <param name="firstDay"></param>
            <param name="lastDay"></param>
        </member>
        <member name="T:QJW.Common.Base64DEncrypt">
            <summary>
            Base64加解密帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.Base64DEncrypt.EncodeBase64(System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="text">要加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.Base64DEncrypt.DecodeBase64(System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="text">要解密的字符串</param>
        </member>
        <member name="T:QJW.Common.DESDEncrypt">
            <summary>
            DES加密/解密帮助类。
            </summary>
        </member>
        <member name="F:QJW.Common.DESDEncrypt.defaultKey">
            <summary>
            默认密钥
            </summary>
        </member>
        <member name="M:QJW.Common.DESDEncrypt.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.DESDEncrypt.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.DESDEncrypt.Encrypt(System.String,System.String)">
            <summary> 
            加密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="M:QJW.Common.DESDEncrypt.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.DESDEncrypt.Decrypt(System.String,System.String)">
            <summary> 
            解密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="T:QJW.Common.FileDEncrypt">
            <summary>
            文件加解密帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.FileDEncrypt.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.FileDEncrypt.EncryptFile(System.String,System.String,System.String)">
            <summary>
            加密文件
            </summary>
            <param name="filePath">输入文件路径</param>
            <param name="savePath">加密后输出文件路径</param>
            <param name="keyStr">密码，可以为“”</param>
            <returns></returns>  
        </member>
        <member name="M:QJW.Common.FileDEncrypt.DecryptFile(System.String,System.String,System.String)">
            <summary>
            解密文件
            </summary>
            <param name="filePath">输入文件路径</param>
            <param name="savePath">解密后输出文件路径</param>
            <param name="keyStr">密码，可以为“”</param>
            <returns></returns>    
        </member>
        <member name="T:QJW.Common.HashDEncrypt">
            <summary>
            得到随机安全码（哈希加密）。
            </summary>
        </member>
        <member name="M:QJW.Common.HashDEncrypt.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.HashDEncrypt.GetSecurity">
            <summary>
            得到随机哈希加密字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.HashDEncrypt.GetRandomValue">
            <summary>
            得到一个随机数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.HashDEncrypt.HashEncoding(System.String)">
            <summary>
            哈希加密一个字符串
            </summary>
            <param name="Security"></param>
            <returns></returns>
        </member>
        <member name="T:QJW.Common.MD5Encrypt">
            <summary>
            获取MD5值帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.MD5Encrypt.GetStrMD5(System.String)">
            <summary>
            得到字符串的md5值
            </summary>
            <param name="str">传入的字符串</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.MD5Encrypt.GetFileMD5(System.String)">
            <summary>
            得到文件的md5值
            </summary>
            <param name="str">传入的文件路径</param>
            <returns></returns>
        </member>
        <member name="T:QJW.Common.RSADEncrypt">
            <summary> 
            RSA加密解密及RSA签名和验证
            </summary> 
        </member>
        <member name="M:QJW.Common.RSADEncrypt.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.RSADEncrypt.RSAKey(System.String@,System.String@)">
            <summary>
            RSA 的密钥产生 产生私钥 和公钥 
            </summary>
            <param name="xmlKeys"></param>
            <param name="xmlPublicKey"></param>
        </member>
        <member name="T:QJW.Common.TripleDESDEncrypt">
            <summary>
            TripleDES加解密帮助类
            </summary>
        </member>
        <member name="F:QJW.Common.TripleDESDEncrypt.defaultKey">
            <summary>
            默认密钥
            </summary>
        </member>
        <member name="M:QJW.Common.TripleDESDEncrypt.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:QJW.Common.TripleDESDEncrypt.Encrypt(System.String)">
            <summary>
            使用缺省密钥字符串加密string
            </summary>
            <param name="original">明文</param>
            <returns>密文</returns>
        </member>
        <member name="M:QJW.Common.TripleDESDEncrypt.Decrypt(System.String)">
            <summary>
            使用缺省密钥字符串解密string
            </summary>
            <param name="original">密文</param>
            <returns>明文</returns>
        </member>
        <member name="M:QJW.Common.TripleDESDEncrypt.Encrypt(System.String,System.String)">
            <summary>
            使用给定密钥字符串加密string
            </summary>
            <param name="original">原始文字</param>
            <param name="key">密钥</param>
            <param name="encoding">字符编码方案</param>
            <returns>密文</returns>
        </member>
        <member name="M:QJW.Common.TripleDESDEncrypt.Decrypt(System.String,System.String)">
            <summary>
            使用给定密钥字符串解密string
            </summary>
            <param name="original">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="M:QJW.Common.TripleDESDEncrypt.Decrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            使用给定密钥字符串解密string,返回指定编码方式明文
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <param name="encoding">字符编码方案</param>
            <returns>明文</returns>
        </member>
        <member name="M:QJW.Common.TripleDESDEncrypt.Decrypt(System.Byte[])">
            <summary>
            使用缺省密钥字符串解密byte[]
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="M:QJW.Common.TripleDESDEncrypt.Encrypt(System.Byte[])">
            <summary>
            使用缺省密钥字符串加密
            </summary>
            <param name="original">原始数据</param>
            <param name="key">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:QJW.Common.TripleDESDEncrypt.MakeMD5(System.Byte[])">
            <summary>
            生成MD5摘要
            </summary>
            <param name="original">数据源</param>
            <returns>摘要</returns>
        </member>
        <member name="M:QJW.Common.TripleDESDEncrypt.Encrypt(System.Byte[],System.Byte[])">
            <summary>
            使用给定密钥加密
            </summary>
            <param name="original">明文</param>
            <param name="key">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:QJW.Common.TripleDESDEncrypt.Decrypt(System.Byte[],System.Byte[])">
            <summary>
            使用给定密钥解密数据
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="T:QJW.Common.MailHelper">
            <summary>
            邮件操作类
            </summary>
        </member>
        <member name="M:QJW.Common.MailHelper.GetEMailLoginUrl(System.String)">
            <summary>
            获取Email登陆地址
            </summary>
            <param name="email">email地址</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="mailSubjct">邮件主题</param>
            <param name="mailBody">邮件正文</param>
            <param name="mailFrom">发送者</param>
            <param name="mailAddress">邮件地址列表</param>
            <param name="HostIP">主机IP</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
            <summary>
            发送邮件（要求登陆）
            </summary>
            <param name="mailSubjct">邮件主题</param>
            <param name="mailBody">邮件正文</param>
            <param name="mailFrom">发送者</param>
            <param name="mailAddress">接收地址列表</param>
            <param name="HostIP">主机IP</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            发送邮件
            </summary>
            <param name="mailSubjct">邮件主题</param>
            <param name="mailBody">邮件正文</param>
            <param name="mailFrom">发送者</param>
            <param name="mailAddress">接收地址列表</param>
            <param name="HostIP">主机IP</param>
            <param name="filename">附件名</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <param name="ssl">加密类型</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Int32,System.String,System.String,System.Boolean,System.String,System.Boolean@)">
            <summary>
            发送邮件
            </summary>
            <param name="mailSubjct"></param>
            <param name="mailBody"></param>
            <param name="mailFrom"></param>
            <param name="mailAddress"></param>
            <param name="HostIP"></param>
            <param name="port"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="ssl"></param>
            <param name="replyTo"></param>
            <param name="sendOK"></param>
            <returns></returns>
        </member>
        <member name="T:QJW.Common.MailSmtpHelper">
            <summary>
            使用smtp发送邮件帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.MailSmtpHelper.SendByConfig(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Text.Encoding,System.Boolean,System.String[])">
            <summary>
            使用配置文件的配置信息发送邮件
            </summary>
            <param name="server">包含用于 SMTP 事务的主机的名称或 IP 地址</param>
            <param name="sender">发件人</param>
            <param name="recipient">收件人</param>
            <param name="subject">主题</param>
            <param name="body">内容</param>
            <param name="isBodyHtml">内容是否是Html格式</param>
            <param name="encoding">编码</param>
            <param name="isAuthentication">是否认证</param>
            <param name="files">附件列表</param>
        </member>
        <member name="M:QJW.Common.MailSmtpHelper.Send(System.String,System.String,System.String)">
            <summary>
            群发邮件
            </summary>
            <param name="subject">主题</param>
            <param name="body">内容</param>
            <param name="to">收件人列表</param>
        </member>
        <member name="T:QJW.Common.SmtpConfig">
            <summary>
            smtp配置类
            </summary>
        </member>
        <member name="T:QJW.Common.SmtpSetting">
            <summary>
            smtp设置类
            </summary>
        </member>
        <member name="T:QJW.Common.DataToExcel">
            <summary>
            操作EXCEL导出数据报表的类
            </summary>
        </member>
        <member name="P:QJW.Common.DataToExcel.TitleColorIndex">
            <summary>
            标题背景色
            </summary>
        </member>
        <member name="M:QJW.Common.DataToExcel.CreateExcel">
            <summary>
            创建一个Excel示例
            </summary>
        </member>
        <member name="M:QJW.Common.DataToExcel.KillExcelProcess">
            <summary>
            结束Excel进程
            </summary>
        </member>
        <member name="M:QJW.Common.DataToExcel.ClearFile(System.String)">
            <summary>
            将DataTable的数据导出显示为报表(不使用Excel对象)
            </summary>
            <param name="dt">数据DataTable</param>
            <param name="strTitle">标题</param>
            <param name="FilePath">生成文件的路径</param>
            <param name="nameList"></param>
            <returns></returns>
        </member>
        <member name="T:QJW.Common.ExcelHelper">
            <summary>
            Excel操作类
            </summary>
            Microsoft Excel 11.0 Object Library
        </member>
        <!-- 对于成员“M:QJW.Common.ExcelHelper.DataTable1Excel(System.Data.DataTable)”忽略有格式错误的 XML 注释 -->
        <member name="M:QJW.Common.ExcelHelper.DataTable2Excel(System.Data.DataTable)">
            <summary>
            导出Excel文件，转换为可读模式
            </summary>
        </member>
        <member name="M:QJW.Common.ExcelHelper.DataTable3Excel(System.Data.DataTable,System.String)">
            <summary>
            导出Excel文件，并自定义文件名
            </summary>
        </member>
        <member name="M:QJW.Common.ExcelHelper.OutputToExcel(System.Data.DataTable,System.String)">
            <summary>
            将数据导出至Excel文件
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="ExcelFilePath">Excel文件路径</param>
        </member>
        <member name="M:QJW.Common.ExcelHelper.OutputToExcel(System.Data.DataTable,System.Collections.ArrayList,System.String)">
            <summary>
            将数据导出至Excel文件
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="Columns">要导出的数据列集合</param>
            <param name="ExcelFilePath">Excel文件路径</param>
        </member>
        <member name="M:QJW.Common.ExcelHelper.ExportData(System.String,System.String)">
            <summary>
            导出内容到客户端
            </summary>
            <param name="strContent">内容</param>
            <param name="FileName">文件名</param>
        </member>
        <member name="M:QJW.Common.ExcelHelper.ExportData(System.Web.UI.WebControls.GridView)">
            <summary>
            导出Excel
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:QJW.Common.ExcelHelper.GetExcelTables(System.String)">
            <summary>
            获取Excel文件数据表列表
            </summary>
        </member>
        <member name="M:QJW.Common.ExcelHelper.InputFromExcel(System.String,System.String)">
            <summary>
            将Excel文件导出至DataTable(第一行作为表头)
            </summary>
            <param name="ExcelFilePath">Excel文件路径</param>
            <param name="TableName">数据表名，如果数据表名错误，默认为第一个数据表名</param>
        </member>
        <member name="M:QJW.Common.ExcelHelper.GetExcelTableColumns(System.String,System.String)">
            <summary>
            获取Excel文件指定数据表的数据列表
            </summary>
            <param name="ExcelFileName">Excel文件名</param>
            <param name="TableName">数据表名</param>
        </member>
        <member name="T:QJW.Common.GridViewExport">
            <summary>
            GridView导出Excel相关类
            </summary>
        </member>
        <member name="M:QJW.Common.GridViewExport.PrepareControlForExport(System.Web.UI.Control)">
            <summary>
            Replace any of the contained controls with literals
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:QJW.Common.GridViewExport.OutputExcel(System.Web.UI.WebControls.GridView,System.Data.DataTable,System.String)">
            <summary>
            导出Grid的数据(全部)到Excel
            字段全部为BoundField类型时可用
            要是字段为TemplateField模板型时就取不到数据
            </summary>
            <param name="grid">grid的ID</param>
            <param name="dt">数据源</param>
            <param name="excelFileName">要导出Excel的文件名</param>
        </member>
        <member name="T:QJW.Common.DirectoryHelper">
            <summary>
            文件夹帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.IsExistDirectory(System.String)">
            <summary>
            检测指定目录是否存在
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.IsExistFile(System.String)">
            <summary>
            检测指定文件是否存在,如果存在则返回true。
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:QJW.Common.DirectoryHelper.GetFileNames(System.String)">
            <summary>
            获取指定目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:QJW.Common.DirectoryHelper.GetDirectories(System.String)">
            <summary>
            获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:QJW.Common.DirectoryHelper.GetFileNames(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.IsEmptyDirectory(System.String)">
            <summary>
            检测指定目录是否为空
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:QJW.Common.DirectoryHelper.Contains(System.String,System.String)">
            <summary>
            检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>        
        </member>
        <member name="M:QJW.Common.DirectoryHelper.Contains(System.String,System.String,System.Boolean)">
            <summary>
            检测指定目录中是否存在指定的文件
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param> 
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.CreateDir(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="dir">要创建的目录路径包括目录名</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.DeleteDir(System.String)">
            <summary>
            删除目录
            </summary>
            <param name="dir">要删除的目录路径和名称</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="file">要删除的文件路径和名称</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.CreateFile(System.String,System.String)">
            <summary>
            创建文件
            </summary>
            <param name="dir">带后缀的文件名</param>
            <param name="pagestr">文件内容</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.MoveFile(System.String,System.String)">
            <summary>
            移动文件(剪贴--粘贴)
            </summary>
            <param name="dir1">要移动的文件的路径及全名(包括后缀)</param>
            <param name="dir2">文件移动到新的位置,并指定新的文件名</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.CopyFile(System.String,System.String)">
            <summary>
            复制文件
            </summary>
            <param name="dir1">要复制的文件的路径已经全名(包括后缀)</param>
            <param name="dir2">目标位置,并指定新的文件名</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.GetDateDir">
            <summary>
            根据时间得到目录名yyyyMMdd
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.GetDateFile">
            <summary>
            根据时间得到文件名HHmmssff
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.CopyFolder(System.String,System.String)">
            <summary>
            复制文件夹(递归)
            </summary>
            <param name="varFromDirectory">源文件夹路径</param>
            <param name="varToDirectory">目标文件夹路径</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.ExistsFile(System.String)">
            <summary>
            检查文件,如果文件不存在则创建  
            </summary>
            <param name="FilePath">路径,包括文件名</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.DeleteFolderFiles(System.String,System.String)">
            <summary>
            删除指定文件夹对应其他文件夹里的文件
            </summary>
            <param name="varFromDirectory">指定文件夹路径</param>
            <param name="varToDirectory">对应其他文件夹路径</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.GetFileName(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:QJW.Common.DirectoryHelper.CreateDirectory(System.String)">
            <summary>
            创建一个目录
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.CreateFile(System.String)">
            <summary>
            创建一个文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.CreateFile(System.String,System.Byte[])">
            <summary>
            创建一个文件,并将字节流写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="buffer">二进制流数据</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.GetLineCount(System.String)">
            <summary>
            获取文本文件的行数
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:QJW.Common.DirectoryHelper.GetFileSize(System.String)">
            <summary>
            获取一个文件的长度,单位为Byte
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:QJW.Common.DirectoryHelper.GetDirectories(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.WriteText(System.String,System.String,System.Text.Encoding)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">写入的内容</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.AppendText(System.String,System.String)">
            <summary>
            向文本文件的尾部追加内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.Copy(System.String,System.String)">
            <summary>
            将源文件的内容复制到目标文件中
            </summary>
            <param name="sourceFilePath">源文件的绝对路径</param>
            <param name="destFilePath">目标文件的绝对路径</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.Move(System.String,System.String)">
            <summary>
            将文件移动到指定目录
            </summary>
            <param name="sourceFilePath">需要移动的源文件的绝对路径</param>
            <param name="descDirectoryPath">移动到的目录的绝对路径</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.GetFileNameNoExtension(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 不包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:QJW.Common.DirectoryHelper.GetExtension(System.String)">
            <summary>
            从文件的绝对路径中获取扩展名
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:QJW.Common.DirectoryHelper.ClearDirectory(System.String)">
            <summary>
            清空指定目录下所有文件及子目录,但该目录依然保存.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.ClearFile(System.String)">
            <summary>
            清空文件内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:QJW.Common.DirectoryHelper.DeleteDirectory(System.String)">
            <summary>
            删除指定目录及其所有子目录
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="T:QJW.Common.FileDownHelper">
            <summary>
            文件下载帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.FileDownHelper.ResponseFile(System.Web.HttpRequest,System.Web.HttpResponse,System.String,System.String,System.Int64)">
            <summary>
             输出硬盘文件，提供下载 支持大文件、续传、速度限制、资源占用小
            </summary>
            <param name="_Request">Page.Request对象</param>
            <param name="_Response">Page.Response对象</param>
            <param name="_fileName">下载文件名</param>
            <param name="_fullPath">带文件名下载路径</param>
            <param name="_speed">每秒允许下载的字节数</param>
            <returns>返回是否成功</returns>
        </member>
        <member name="M:QJW.Common.FileDownHelper.GetFileNameExtension(System.String)">
            <summary>
            获取文件的扩展名
            参数为虚拟路径
            </summary>
        </member>
        <member name="M:QJW.Common.FileDownHelper.GetMapPathFile(System.String)">
            <summary>
            获取物理地址
            </summary>
        </member>
        <member name="M:QJW.Common.FileDownHelper.DownLoad(System.String)">
            <summary>
            普通下载
            </summary>
            <param name="FileName">文件虚拟路径</param>
        </member>
        <member name="M:QJW.Common.FileDownHelper.DownLoadBlock(System.String)">
            <summary>
            分块下载
            </summary>
            <param name="FileName">文件虚拟路径</param>
        </member>
        <member name="T:QJW.Common.FileHelper">
            <summary>
            文件操作帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.FileHelper.GetPostfixStr(System.String)">
            <summary>
            取后缀名
            </summary>
            <param name="filename">文件名</param>
            <returns>.gif|.html格式</returns>
        </member>
        <member name="M:QJW.Common.FileHelper.WriteFile(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="Strings">文件内容</param>
        </member>
        <member name="M:QJW.Common.FileHelper.ReadFile(System.String)">
            <summary>
            读文件
            </summary>
            <param name="Path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FileHelper.FileAdd(System.String,System.String)">
            <summary>
            追加文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="strings">内容</param>
        </member>
        <member name="M:QJW.Common.FileHelper.CoppyFile(System.String,System.String)">
            <summary>
            拷贝文件
            </summary>
            <param name="OrignFile">原始文件</param>
            <param name="NewFile">新文件路径</param>
        </member>
        <member name="M:QJW.Common.FileHelper.FileDel(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="Path">路径</param>
        </member>
        <member name="M:QJW.Common.FileHelper.FileMove(System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="OrignFile">原始路径</param>
            <param name="NewFile">新路径</param>
        </member>
        <member name="M:QJW.Common.FileHelper.CreateFolder(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="Path"></param>
        </member>
        <member name="M:QJW.Common.FileHelper.CreateFile(System.String)">
            <summary>
            创建空文件
            </summary>
            <param name="Path">文件路径</param>
        </member>
        <member name="M:QJW.Common.FileHelper.DeleteFolder(System.String)">
            <summary>
            递归删除文件夹目录及文件
            </summary>
            <param name="dir"></param>  
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FileHelper.CopyDir(System.String,System.String)">
            <summary>
            指定文件夹下面的所有内容copy到目标文件夹下面
            </summary>
            <param name="srcPath">原始路径</param>
            <param name="aimPath">目标文件夹</param>
        </member>
        <member name="M:QJW.Common.FileHelper.GetFoldAll(System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件
            </summary>
            <param name="Path">详细路径</param>
        </member>
        <member name="M:QJW.Common.FileHelper.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="Rn">用于迭加的传入值,一般为空</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FileHelper.GetFoldAll(System.String,System.String,System.String)">
             <summary>
             获取指定文件夹下所有子目录及文件(下拉框形)
             </summary>
             <param name="Path">详细路径</param>
            <param name="DropName">下拉列表名称</param>
            <param name="tplPath">默认选择模板名称</param>
        </member>
        <member name="M:QJW.Common.FileHelper.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="Rn">用于迭加的传入值,一般为空</param>
            <param name="tplPath">默认选择模板名称</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FileHelper.GetDirectoryLength(System.String)">
            <summary>
            获取文件夹大小
            </summary>
            <param name="dirPath">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FileHelper.GetFileAttibe(System.String)">
            <summary>
            获取指定文件详细属性
            </summary>
            <param name="filePath">文件详细路径</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FileHelper.CopyFileFromClipbord(System.Object)">
            <summary>
            从剪切板中复制文件
            </summary>
            <param name="desPath">目标文件夹路径</param>
        </member>
        <member name="M:QJW.Common.FileHelper.CopyFileFromClipbordThread(System.String)">
            <summary>
            从剪切板中复制文件
            </summary>
            <param name="desPath">目标文件夹路径</param>
        </member>
        <member name="T:QJW.Common.FileUpHelper">
            <summary>
            文件上传帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.FileUpHelper.UploadFile(System.String,System.Int32,System.String[],System.Web.UI.HtmlControls.HtmlInputFile)">
            <summary>
            上传文件
            </summary>
            <param name="filePath">保存文件地址</param>
            <param name="maxSize">文件最大大小</param>
            <param name="fileType">文件后缀类型</param>
            <param name="TargetFile">控件名</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FileUpHelper.UploadFile(System.String,System.Int32,System.String[],System.Web.UI.HtmlControls.HtmlInputFile,System.String@,System.Int32@)">
            <summary>
            上传文件
            </summary>
            <param name="filePath">保存文件地址</param>
            <param name="maxSize">文件最大大小</param>
            <param name="fileType">文件后缀类型</param>
            <param name="TargetFile">控件名</param>
            <param name="saveFileName">保存后的文件名和地址</param>
            <param name="fileSize">文件大小</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FileUpHelper.UploadFile(System.String,System.Int32,System.String[],System.String,System.Web.UI.HtmlControls.HtmlInputFile)">
            <summary>
            上传文件
            </summary>
            <param name="filePath">保存文件地址</param>
            <param name="maxSize">文件最大大小</param>
            <param name="fileType">文件后缀类型</param>
            <param name="filename">指定保存后的文件名</param>
            <param name="TargetFile">控件名</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FileUpHelper.UploadFile(System.Byte[],System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="binData">字节数组</param>
            <param name="fileName">文件名</param>
            <param name="fileType">文件类型</param>
        </member>
        <member name="M:QJW.Common.FileUpHelper.UploadFile(System.Web.UI.WebControls.FileUpload,System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="PosPhotoUpload">控件</param>
            <param name="saveFileName">保存的文件名</param>
            <param name="imagePath">保存的文件路径</param>
        </member>
        <member name="M:QJW.Common.FileUpHelper.GetUploadFileName">
            <summary>
            生成上传文件名
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FileUpHelper.FormatNum(System.String,System.Int32)">
            <summary>
            字符串前补0
            </summary>
            <param name="Num">字符串</param>
            <param name="Bit">字符串长度</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FileUpHelper.GetBinaryFile(System.String)">
            <summary>
            转换为字节数组
            </summary>
            <param name="filename">文件名</param>
            <returns>字节数组</returns>
        </member>
        <member name="M:QJW.Common.FileUpHelper.ConvertStreamToByteBuffer(System.IO.Stream)">
            <summary>
            流转化为字节数组
            </summary>
            <param name="theStream">流</param>
            <returns>字节数组</returns>
        </member>
        <member name="T:QJW.Common.INIFileHelper">
            <summary>
            INI文件读写类。
            </summary>
        </member>
        <member name="F:QJW.Common.INIFileHelper.path">
            <summary>
            Ini文件路径
            </summary>
        </member>
        <member name="M:QJW.Common.INIFileHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="INIPath"></param>
        </member>
        <member name="M:QJW.Common.INIFileHelper.IniWriteValue(System.String,System.String,System.String)">
            <summary>
            写INI文件
            </summary>
            <param name="Section"></param>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="M:QJW.Common.INIFileHelper.IniReadValue(System.String,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="Section"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.INIFileHelper.ClearAllSection">
            <summary>
            删除ini文件下所有段落
            </summary>
        </member>
        <member name="M:QJW.Common.INIFileHelper.ClearSection(System.String)">
            <summary>
            删除ini文件下personal段落下的所有键
            </summary>
            <param name="Section"></param>
        </member>
        <member name="T:QJW.Common.EnumFormula">
            <summary>
            EnumFormula
            </summary>
        </member>
        <member name="T:QJW.Common.FormulaHelper">
            <summary>
            数学函数帮助类
            </summary>
        </member>
        <member name="T:QJW.Common.FTPClient">
            <summary>
            Ftp客户端相关类
            </summary>
        </member>
        <member name="M:QJW.Common.FTPClient.#ctor">
            <summary>
            缺省构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.FTPClient.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:QJW.Common.FTPClient.strMsg">
            <summary>
            服务器返回的应答信息(包含应答码)
            </summary>
        </member>
        <member name="F:QJW.Common.FTPClient.strReply">
            <summary>
            服务器返回的应答信息(包含应答码)
            </summary>
        </member>
        <member name="F:QJW.Common.FTPClient.iReplyCode">
            <summary>
            服务器返回的应答码
            </summary>
        </member>
        <member name="F:QJW.Common.FTPClient.socketControl">
            <summary>
            进行控制连接的socket
            </summary>
        </member>
        <member name="F:QJW.Common.FTPClient.trType">
            <summary>
            传输模式
            </summary>
        </member>
        <member name="F:QJW.Common.FTPClient.BLOCK_SIZE">
            <summary>
            接收和发送数据的缓冲区
            </summary>
        </member>
        <member name="F:QJW.Common.FTPClient.ASCII">
            <summary>
            编码方式
            </summary>
        </member>
        <member name="F:QJW.Common.FTPClient.buffer">
            <summary>
            字节数组
            </summary>
        </member>
        <member name="P:QJW.Common.FTPClient.RemoteHost">
            <summary>
            FTP服务器IP地址
            </summary>
        </member>
        <member name="P:QJW.Common.FTPClient.RemotePort">
            <summary>
            FTP服务器端口
            </summary>
        </member>
        <member name="P:QJW.Common.FTPClient.RemotePath">
            <summary>
            当前服务器目录
            </summary>
        </member>
        <member name="P:QJW.Common.FTPClient.RemoteUser">
            <summary>
            登录用户账号
            </summary>
        </member>
        <member name="P:QJW.Common.FTPClient.RemotePass">
            <summary>
            用户登录密码
            </summary>
        </member>
        <member name="P:QJW.Common.FTPClient.Connected">
            <summary>
            是否登录
            </summary>
        </member>
        <member name="M:QJW.Common.FTPClient.Connect">
            <summary>
            建立连接 
            </summary>
        </member>
        <member name="M:QJW.Common.FTPClient.DisConnect">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="T:QJW.Common.FTPClient.TransferType">
            <summary>
            传输模式:二进制类型、ASCII类型
            </summary>
        </member>
        <member name="M:QJW.Common.FTPClient.SetTransferType(QJW.Common.FTPClient.TransferType)">
            <summary>
            设置传输模式
            </summary>
            <param name="ttType">传输模式</param>
        </member>
        <member name="M:QJW.Common.FTPClient.GetTransferType">
            <summary>
            获得传输模式
            </summary>
            <returns>传输模式</returns>
        </member>
        <member name="M:QJW.Common.FTPClient.Dir(System.String)">
            <summary>
            获得文件列表
            </summary>
            <param name="strMask">文件名的匹配字符串</param>
        </member>
        <member name="M:QJW.Common.FTPClient.GetFileSize(System.String)">
            <summary>
            获取文件大小
            </summary>
            <param name="strFileName">文件名</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:QJW.Common.FTPClient.GetFileInfo(System.String)">
            <summary>
            获取文件信息
            </summary>
            <param name="strFileName">文件名</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:QJW.Common.FTPClient.Delete(System.String)">
            <summary>
            删除
            </summary>
            <param name="strFileName">待删除文件名</param>
        </member>
        <member name="M:QJW.Common.FTPClient.Rename(System.String,System.String)">
            <summary>
            重命名(如果新文件名与已有文件重名,将覆盖已有文件)
            </summary>
            <param name="strOldFileName">旧文件名</param>
            <param name="strNewFileName">新文件名</param>
        </member>
        <member name="M:QJW.Common.FTPClient.Get(System.String,System.String)">
            <summary>
            下载一批文件
            </summary>
            <param name="strFileNameMask">文件名的匹配字符串</param>
            <param name="strFolder">本地目录(不得以\结束)</param>
        </member>
        <member name="M:QJW.Common.FTPClient.Get(System.String,System.String,System.String)">
            <summary>
            下载一个文件
            </summary>
            <param name="strRemoteFileName">要下载的文件名</param>
            <param name="strFolder">本地目录(不得以\结束)</param>
            <param name="strLocalFileName">保存在本地时的文件名</param>
        </member>
        <member name="M:QJW.Common.FTPClient.GetNoBinary(System.String,System.String,System.String)">
            <summary>
            下载一个文件
            </summary>
            <param name="strRemoteFileName">要下载的文件名</param>
            <param name="strFolder">本地目录(不得以\结束)</param>
            <param name="strLocalFileName">保存在本地时的文件名</param>
        </member>
        <member name="M:QJW.Common.FTPClient.Put(System.String,System.String)">
            <summary>
            上传一批文件
            </summary>
            <param name="strFolder">本地目录(不得以\结束)</param>
            <param name="strFileNameMask">文件名匹配字符(可以包含*和?)</param>
        </member>
        <member name="M:QJW.Common.FTPClient.Put(System.String)">
            <summary>
            上传一个文件
            </summary>
            <param name="strFileName">本地文件名</param>
        </member>
        <member name="M:QJW.Common.FTPClient.PutByGuid(System.String,System.String)">
            <summary>
            上传一个文件
            </summary>
            <param name="strFileName">本地文件名</param>
        </member>
        <member name="M:QJW.Common.FTPClient.MkDir(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="strDirName">目录名</param>
        </member>
        <member name="M:QJW.Common.FTPClient.RmDir(System.String)">
            <summary>
            删除目录
            </summary>
            <param name="strDirName">目录名</param>
        </member>
        <member name="M:QJW.Common.FTPClient.ChDir(System.String)">
            <summary>
            改变目录
            </summary>
            <param name="strDirName">新的工作目录名</param>
        </member>
        <member name="M:QJW.Common.FTPClient.ReadReply">
            <summary>
            将一行应答字符串记录在strReply和strMsg,应答码记录在iReplyCode
            </summary>
        </member>
        <member name="M:QJW.Common.FTPClient.CreateDataSocket">
            <summary>
            建立进行数据连接的socket
            </summary>
            <returns>数据连接socket</returns>
        </member>
        <member name="M:QJW.Common.FTPClient.CloseSocketConnect">
            <summary>
            关闭socket连接(用于登录以前)
            </summary>
        </member>
        <member name="M:QJW.Common.FTPClient.ReadLine">
            <summary>
            读取Socket返回的所有字符串
            </summary>
            <returns>包含应答码的字符串行</returns>
        </member>
        <member name="M:QJW.Common.FTPClient.SendCommand(System.String)">
            <summary>
            发送命令并获取应答码和最后一行应答字符串
            </summary>
            <param name="strCommand">命令</param>
        </member>
        <member name="T:QJW.Common.FTPHelper">
            <summary>
            Ftp帮助类
            </summary>
        </member>
        <member name="P:QJW.Common.FTPHelper.Ftp">
            <summary>
            全局FTP访问变量
            </summary>
        </member>
        <member name="P:QJW.Common.FTPHelper.Server">
            <summary>
            Ftp服务器
            </summary>
        </member>
        <member name="P:QJW.Common.FTPHelper.User">
            <summary>
            Ftp用户
            </summary>
        </member>
        <member name="P:QJW.Common.FTPHelper.Pass">
            <summary>
            Ftp密码
            </summary>
        </member>
        <member name="M:QJW.Common.FTPHelper.GetList(System.String)">
            <summary>
            得到文件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.FTPHelper.GetFile(System.String,System.String,System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
            <param name="localFolder">本地目录</param>
            <param name="localFileName">本地文件名</param>
        </member>
        <member name="M:QJW.Common.FTPHelper.AddMSCFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            修改文件
            </summary>
            <param name="ftpFolder">本地目录</param>
            <param name="ftpFileName">本地文件名temp</param>
            <param name="localFolder">本地目录</param>
            <param name="localFileName">本地文件名</param>
        </member>
        <member name="M:QJW.Common.FTPHelper.DelFile(System.String,System.String)">
            <summary>
            删除文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:QJW.Common.FTPHelper.PutFile(System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:QJW.Common.FTPHelper.GetFileNoBinary(System.String,System.String,System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
            <param name="localFolder">本地目录</param>
            <param name="localFileName">本地文件名</param>
        </member>
        <member name="M:QJW.Common.FTPHelper.GetFileInfo(System.String,System.String)">
            <summary>
            得到FTP上文件信息
            </summary>
            <param name="ftpFolder">FTP目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:QJW.Common.FTPHelper.CanConnect">
            <summary>
            测试FTP服务器是否可登陆
            </summary>
        </member>
        <member name="M:QJW.Common.FTPHelper.GetFileInfoConnected(System.String,System.String)">
            <summary>
            得到FTP上文件信息
            </summary>
            <param name="ftpFolder">FTP目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:QJW.Common.FTPHelper.GetFileList(System.String,System.String)">
            <summary>
            得到文件列表
            </summary>
            <param name="ftpFolder">FTP目录</param>
            <returns>FTP通配符号</returns>
        </member>
        <member name="M:QJW.Common.FTPHelper.getFtpClient">
             <summary>
            得到FTP传输对象
             </summary>
        </member>
        <member name="T:QJW.Common.HtmlHelper">
            <summary>
            Html操作相关类
            </summary>
        </member>
        <member name="P:QJW.Common.HtmlHelper.CookieContainer">
            <summary> 
            Cookie
            </summary> 
        </member>
        <member name="P:QJW.Common.HtmlHelper.Encoding">
            <summary> 
            语言
            </summary> 
        </member>
        <member name="M:QJW.Common.HtmlHelper.GetHtml(System.String,System.String,System.Boolean,System.Net.CookieContainer)">
            <summary>
            获取HTML
            </summary>
            <param name="url">地址</param>
            <param name="postData">post 提交的字符串</param>
            <param name="isPost">是否是post</param>
            <param name="cookieContainer">CookieContainer</param>
        </member>
        <member name="M:QJW.Common.HtmlHelper.GetHtml(System.String,System.Net.CookieContainer)">
            <summary>
            获取HTML
            </summary>
            <param name="url">地址</param>
            <param name="cookieContainer">CookieContainer</param>
        </member>
        <member name="M:QJW.Common.HtmlHelper.GetStream(System.String,System.Net.CookieContainer)">
            <param name="url">地址</param>
            <param name="cookieContainer">cookieContainer</param>
        </member>
        <member name="M:QJW.Common.HtmlHelper.NoHTML(System.String)">
            <summary>   
            清除HTML标记   
            </summary>   
            <param name="NoHTML">包括HTML的源码</param>   
            <returns>已经去除后的文字</returns>   
        </member>
        <member name="M:QJW.Common.HtmlHelper.DelHtmlCode(System.String)">
            <summary>
            删除文本中带的HTML标记
            </summary>
            <param name="InString">输入要删除带HTML的字符串</param>    
            <returns>返回处理过的字符串</returns>
        </member>
        <member name="M:QJW.Common.HtmlHelper.GetHref(System.String)">
            <summary>
            获取页面的链接正则
            </summary>
        </member>
        <member name="M:QJW.Common.HtmlHelper.GetImgSrc(System.String,System.String)">
            <summary>
            匹配页面的图片地址
            </summary>
            <param name="imgHttp">要补充的http://路径信息</param>
        </member>
        <member name="M:QJW.Common.HtmlHelper.GetImg(System.String,System.String)">
            <summary>
            匹配<img src="" />中的图片路径实际链接
            </summary>
            <param name="ImgString"><img src="" />字符串</param>
        </member>
        <member name="M:QJW.Common.HtmlHelper.Get_Http(System.String)">
            <summary>
            以GET方式抓取远程页面内容
            </summary>
        </member>
        <member name="M:QJW.Common.HtmlHelper.Post_Http(System.String,System.String,System.String)">
            <summary>
            以POST方式抓取远程页面内容
            </summary>
            <param name="postData">参数列表</param>
        </member>
        <member name="M:QJW.Common.HtmlHelper.ZipHtml(System.String)">
            <summary>
            压缩HTML输出
            </summary>
        </member>
        <member name="M:QJW.Common.HtmlHelper.DelHtml(System.String,System.String)">
            <summary>
            过滤指定HTML标签
            </summary>
            <param name="s_TextStr">要过滤的字符</param>
            <param name="html_Str">a img p div</param>
        </member>
        <member name="M:QJW.Common.HtmlHelper.File(System.String,System.Web.UI.Page)">
            <summary>
            加载文件块
            </summary>
        </member>
        <member name="M:QJW.Common.HtmlHelper.CSS(System.String,System.Web.UI.Page)">
            <summary>
            加载CSS样式文件
            </summary>
        </member>
        <member name="M:QJW.Common.HtmlHelper.JS(System.String,System.Web.UI.Page)">
            <summary>
            加载javascript脚本文件
            </summary>
        </member>
        <member name="M:QJW.Common.HtmlHelper.alert(System.String,System.String)">
            <summary>
            弹出警告信息并跳转到指定页面地址
            </summary>
            <param name="str">警告信息内容</param>
            <param name="url">指定要跳转的页面地址</param>
        </member>
        <member name="M:QJW.Common.HtmlHelper.erro(System.String)">
            <summary>
            弹出信息 无跳转动作
            </summary>
            <param name="str">信息内容</param>
        </member>
        <member name="M:QJW.Common.HtmlHelper.goback">
            <summary>
            后退一页
            </summary>
        </member>
        <member name="M:QJW.Common.HtmlHelper.DoJsFunction(System.String)">
            <summary>
            执行js命令
            </summary>
            <param name="function">传入要执行的js函数[包含参数的函数]</param>
        </member>
        <member name="M:QJW.Common.HtmlHelper.Decode(System.String)">
            <summary>
            解码得到url值
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:QJW.Common.HtmlHelper.Encode(System.String)">
            <summary>
            编码传入url
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:QJW.Common.HtmlHelper.IsEmpty(System.String,System.String)">
            <summary>
            判断输入是否为空 并弹出错误信息
            </summary>
            <param name="str">验证内容</param>
            <param name="erroStr">错误提示内容</param>
            <returns>bool</returns>
        </member>
        <member name="T:QJW.Common.JavaScriptHelper">
            <summary>
            JavaScript客户端脚本输出帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.AlertAndRedirect(System.String,System.String)">
            <summary>
            弹出信息,并跳转指定页面。
            </summary>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.AlertAndGoHistory(System.String,System.Int32)">
            <summary>
            弹出信息,并返回历史页面
            </summary>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.AlertAndParentUrl(System.String,System.String)">
            <summary>
            弹出信息 并指定到父窗口
            </summary>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.ParentRedirect(System.String)">
            <summary>
            返回到父窗口
            </summary>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.Alert(System.String)">
            <summary>
            弹出信息
            </summary>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.RegisterScriptBlock(System.Web.UI.Page,System.String)">
            <summary>
            注册脚本块
            </summary>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.GetShowModalWindowScript(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            返回把指定链接地址显示模态窗口的脚本
            </summary>
            <param name="wid"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="url"></param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.ShowModalWindow(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            把指定链接地址显示模态窗口
            </summary>
            <param name="wid">窗口ID</param>
            <param name="title">标题</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="url">链接地址</param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.ShowCilentModalWindow(System.String,System.Web.UI.WebControls.WebControl,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            为指定控件绑定前台脚本：显示模态窗口
            </summary>
            <param name="control"></param>
            <param name="eventName"></param>
            <param name="wid"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="url"></param>
            <param name="isScriptEnd"></param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.ShowCilentModalWindow(System.String,System.Web.UI.WebControls.TableCell,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            为指定控件绑定前台脚本：显示模态窗口
            </summary>
            <param name="cell"></param>
            <param name="eventName"></param>
            <param name="wid"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="url"></param>
            <param name="isScriptEnd"></param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.ShowCilentConfirm(System.Web.UI.WebControls.WebControl,System.String,System.String)">
            <summary>
            显示客户端确认窗口
            </summary>
            <param name="control"></param>
            <param name="eventName"></param>
            <param name="message"></param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.ShowCilentConfirm(System.Web.UI.WebControls.WebControl,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            显示客户端确认窗口
            </summary>
            <param name="control"></param>
            <param name="eventName"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="message"></param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.WriteScript(System.String)">
            <summary>
            写javascript脚本
            </summary>
            <param name="script">脚本内容</param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.GetCurrentPage">
            <summary>
            得到当前页对象实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.GoHistory(System.Int32)">
            <summary>
            回到历史页面
            </summary>
            <param name="value">-1/1</param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.CloseWindow">
            <summary>
            关闭当前窗口
            </summary>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.RefreshParent(System.String)">
            <summary>
            刷新父窗口
            </summary>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.RefreshOpener">
            <summary>
            刷新打开窗口
            </summary>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.JavaScriptLocationHref(System.String)">
            <summary>
            转向Url指定的页面
            </summary>
            <param name="url">连接地址</param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.ShowModalDialogWindow(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            打开指定大小位置的模式对话框
            </summary>
            <param name="webFormUrl">连接地址</param>
            <param name="width">宽</param>
            <param name="height">高</param>
            <param name="top">距离上位置</param>
            <param name="left">距离左位置</param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.ShowModalDialogWindow(System.String,System.String)">
            <summary>
            打开模式对话框
            </summary>
            <param name="webFormUrl">链接地址</param>
            <param name="features"></param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.ShowModalDialogJavascript(System.String,System.String)">
            <summary>
            打开模式对话框
            </summary>
            <param name="webFormUrl"></param>
            <param name="features"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.OpenWebFormSize(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            打开指定大小的新窗体
            </summary>
            <param name="url">地址</param>
            <param name="width">宽</param>
            <param name="heigth">高</param>
            <param name="top">头位置</param>
            <param name="left">左位置</param>
        </member>
        <member name="M:QJW.Common.JavaScriptHelper.JavaScriptExitIfream(System.String)">
            <summary>
            页面跳转（跳出框架）
            </summary>
            <param name="url"></param>
        </member>
        <member name="T:QJW.Common.ImageDown">
            <summary>
            图片下载
            </summary>
        </member>
        <member name="M:QJW.Common.ImageDown.GetImgTag(System.String)">
            <summary>
            获取图片标志
            </summary>
        </member>
        <member name="M:QJW.Common.ImageDown.GetImgUrl(System.String)">
            <summary>
            获取图片URL地址
            </summary>
        </member>
        <member name="M:QJW.Common.ImageDown.SaveUrlPics(System.String,System.String)">
            <summary>
            下载图片到本地
            </summary>
            <param name="strHTML">HTML</param>
            <param name="path">路径</param>
        </member>
        <member name="T:QJW.Common.ImageHelper">
            <summary>
            图片处理帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.ImageHelper.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.ImageHelper.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>    
        </member>
        <member name="M:QJW.Common.ImageHelper.ImageWatermark(System.String,System.String,System.String)">
            <summary>
            图片水印处理方法
            </summary>
            <param name="path">需要加载水印的图片路径（绝对路径）</param>
            <param name="waterpath">水印图片（绝对路径）</param>
            <param name="location">水印位置（传送正确的代码）</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.GetLocation(System.String,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            图片水印位置处理方法
            </summary>
            <param name="location">水印位置</param>
            <param name="img">需要添加水印的图片</param>
            <param name="waterimg">水印图片</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.LetterWatermark(System.String,System.Int32,System.String,System.Drawing.Color,System.String)">
            <summary>
            文字水印处理方法
            </summary>
            <param name="path">图片路径（绝对路径）</param>
            <param name="size">字体大小</param>
            <param name="letter">水印文字</param>
            <param name="color">颜色</param>
            <param name="location">水印位置</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.GetLocation(System.String,System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            文字水印位置的方法
            </summary>
            <param name="location">位置代码</param>
            <param name="img">图片对象</param>
            <param name="width">宽(当水印类型为文字时,传过来的就是字体的大小)</param>
            <param name="height">高(当水印类型为文字时,传过来的就是字符的长度)</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.LDPic(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32)">
            <summary>
            调整光暗
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
            <param name="val">增加或减少的光暗值</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.RePic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            反色处理
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.FD(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            浮雕处理
            </summary>
            <param name="oldBitmap">原始图片</param>
            <param name="Width">原始图片的长度</param>
            <param name="Height">原始图片的高度</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.ResizeImage(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            拉伸图片
            </summary>
            <param name="bmp">原始图片</param>
            <param name="newW">新的宽度</param>
            <param name="newH">新的高度</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.FilPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            滤色处理
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.RevPicLR(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            左右翻转
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.RevPicUD(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            上下翻转
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.Compress(System.String,System.String)">
            <summary>
            压缩到指定尺寸
            </summary>
            <param name="oldfile">原文件</param>
            <param name="newfile">新文件</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.BWPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            转换为黑白图片
            </summary>
            <param name="mybt">要进行处理的图片</param>
            <param name="width">图片的长度</param>
            <param name="height">图片的高度</param>
        </member>
        <member name="M:QJW.Common.ImageHelper.GetFrames(System.String,System.String)">
            <summary>
            获取图片中的各帧
            </summary>
            <param name="pPath">图片路径</param>
            <param name="pSavePath">保存路径</param>
        </member>
        <member name="T:QJW.Common.FileExtension">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="T:QJW.Common.FileValidation">
            <summary>
            图片检测类
            </summary>
        </member>
        <member name="M:QJW.Common.FileValidation.IsAllowedExtension(System.Web.HttpPostedFile,QJW.Common.FileExtension[])">
            <summary>
            是否允许
            </summary>
        </member>
        <member name="M:QJW.Common.FileValidation.IsSecureUploadPhoto(System.Web.HttpPostedFile)">
            <summary>
            上传前的图片是否可靠
            </summary>
        </member>
        <member name="M:QJW.Common.FileValidation.IsSecureUpfilePhoto(System.String)">
            <summary>
            上传后的图片是否安全
            </summary>
            <param name="photoFile">物理地址</param>
        </member>
        <member name="T:QJW.Common.ImageUpload">
            <summary>
            图片上传类
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.Error">
            <summary>
            Error返回值
            1、没有上传的文件
            2、类型不允许
            3、大小超限
            4、未知错误
            0、上传成功。 
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.MaxSize">
            <summary>
            最大单个上传文件
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.FileType">
            <summary>
            所支持的上传类型用";"隔开 
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.SavePath">
            <summary>
            保存文件的实际路径 
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.SaveType">
            <summary>
            上传文件的类型，0代表自动生成文件名
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.FormFile">
            <summary>
            上传控件
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.InFileName">
            <summary>
            非自动生成文件名设置。
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.OutFileName">
            <summary>
            输出文件名
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.OutThumbFileName">
            <summary>
            输出的缩略图文件名
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.Iss">
            <summary>
            是否有缩略图生成.
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.Width">
            <summary>
            获取上传图片的宽度
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.Height">
            <summary>
            获取上传图片的高度
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.sWidth">
            <summary>
            设置缩略图的宽度
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.sHeight">
            <summary>
            设置缩略图的高度
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.IsCreateImg">
            <summary>
            是否生成缩略图
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.IsDraw">
            <summary>
            是否加水印
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.DrawStyle">
            <summary>
            设置加水印的方式
            0:文字水印模式
            1:图片水印模式
            2:不加
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.DrawString_x">
            <summary>
            绘制文本的Ｘ坐标（左上角）
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.DrawString_y">
            <summary>
            绘制文本的Ｙ坐标（左上角）
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.AddText">
            <summary>
            设置文字水印内容
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.Font">
            <summary>
            设置文字水印字体
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.FontSize">
            <summary>
            设置文字水印字的大小
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.FileSize">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="P:QJW.Common.ImageUpload.CopyIamgePath">
            <summary>
            图片水印模式下的覆盖图片的实际地址
            </summary>
        </member>
        <member name="M:QJW.Common.ImageUpload.GetExt(System.String)">
            <summary>
            获取文件的后缀名 
            </summary>
        </member>
        <member name="M:QJW.Common.ImageUpload.FileName(System.String)">
            <summary>
            获取输出文件的文件名
            </summary>
        </member>
        <member name="M:QJW.Common.ImageUpload.IsUpload(System.String)">
            <summary>
            检查上传的文件的类型，是否允许上传。
            </summary>
        </member>
        <member name="T:QJW.Common.JsonHelper">
            <summary>
            JSON转换帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.JsonHelper.String2Json(System.String)">
            <summary>
            过滤特殊字符
            </summary>
        </member>
        <member name="M:QJW.Common.JsonHelper.StringFormat(System.String,System.Type)">
            <summary>
            格式化字符型、日期型、布尔型
            </summary>
        </member>
        <member name="M:QJW.Common.JsonHelper.ListToJson``1(System.Collections.Generic.IList{``0})">
            <summary>
            List转换成Json
            </summary>
        </member>
        <member name="M:QJW.Common.JsonHelper.ListToJson``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            List转换成Json 
            </summary>
        </member>
        <member name="M:QJW.Common.JsonHelper.ToJson(System.Object)">
            <summary> 
            对象转换为Json 
            </summary> 
            <param name="jsonObject">对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:QJW.Common.JsonHelper.ToJson(System.Collections.IEnumerable)">
            <summary> 
            对象集合转换Json 
            </summary> 
            <param name="array">集合对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:QJW.Common.JsonHelper.ToArrayString(System.Collections.IEnumerable)">
            <summary> 
            普通集合转换Json 
            </summary> 
            <param name="array">集合对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:QJW.Common.JsonHelper.ToJson(System.Data.DataSet)">
            <summary> 
            DataSet转换为Json 
            </summary> 
            <param name="dataSet">DataSet对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:QJW.Common.JsonHelper.ToJson(System.Data.DataTable)">
            <summary> 
            Datatable转换为Json 
            </summary> 
            <param name="table">Datatable对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:QJW.Common.JsonHelper.ToJson(System.Data.DataTable,System.String)">
            <summary>
            DataTable转换为Json 
            </summary>
        </member>
        <member name="M:QJW.Common.JsonHelper.ToJson(System.Data.Common.DbDataReader)">
            <summary> 
            DataReader转换为Json 
            </summary> 
            <param name="dataReader">DataReader对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="T:QJW.Common.MediaHelper">
            <summary>
            处理多媒体的公共类
            </summary>
        </member>
        <member name="M:QJW.Common.MediaHelper.SyncPlayWAV(System.Media.SoundPlayer,System.String)">
            <summary>
            以同步方式播放wav文件
            </summary>
            <param name="sp">SoundPlayer对象</param>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:QJW.Common.MediaHelper.SyncPlayWAV(System.String)">
            <summary>
            以同步方式播放wav文件
            </summary>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:QJW.Common.MediaHelper.ASyncPlayWAV(System.Media.SoundPlayer,System.String)">
            <summary>
            以异步方式播放wav文件
            </summary>
            <param name="sp">SoundPlayer对象</param>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:QJW.Common.MediaHelper.ASyncPlayWAV(System.String)">
            <summary>
            以异步方式播放wav文件
            </summary>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:QJW.Common.MediaHelper.StopWAV(System.Media.SoundPlayer)">
            <summary>
            
            </summary>
            <param name="sp">SoundPlayer对象</param>
        </member>
        <member name="T:QJW.Common.MessageBoxHelper">
            <summary>
            页面中弹出对话框帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.MessageBoxHelper.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.MessageBoxHelper.Show(System.Web.UI.Page,System.String)">
            <summary>
            显示消息提示对话框
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:QJW.Common.MessageBoxHelper.ShowConfirm(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            控件点击 消息确认提示框
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:QJW.Common.MessageBoxHelper.ShowAndRedirect(System.Web.UI.Page,System.String,System.String)">
            <summary>
            显示消息提示对话框，并进行页面跳转
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
            <param name="url">跳转的目标URL</param>
        </member>
        <member name="M:QJW.Common.MessageBoxHelper.ResponseScript(System.Web.UI.Page,System.String)">
            <summary>
            输出自定义脚本信息
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="script">输出脚本</param>
        </member>
        <member name="T:QJW.Common.IpHelper">
            <summary>
            共用工具类
            </summary>
        </member>
        <member name="M:QJW.Common.IpHelper.GetUserIp">
            <summary>
            获得用户IP
            </summary>
        </member>
        <member name="T:QJW.Common.NetHelper">
            <summary>
            网络操作相关的类
            </summary>    
        </member>
        <member name="M:QJW.Common.NetHelper.GetValidPort(System.String)">
            <summary>
            检查设置的端口号是否正确，并返回正确的端口号,无效端口号返回-1。
            </summary>
            <param name="port">设置的端口号</param>        
        </member>
        <member name="M:QJW.Common.NetHelper.StringToIPAddress(System.String)">
            <summary>
            将字符串形式的IP地址转换成IPAddress对象
            </summary>
            <param name="ip">字符串形式的IP地址</param>        
        </member>
        <member name="P:QJW.Common.NetHelper.LocalHostName">
            <summary>
            获取本机的计算机名
            </summary>
        </member>
        <member name="P:QJW.Common.NetHelper.LANIP">
            <summary>
            获取本机的局域网IP
            </summary>        
        </member>
        <member name="P:QJW.Common.NetHelper.WANIP">
            <summary>
            获取本机在Internet网络的广域网IP
            </summary>        
        </member>
        <member name="M:QJW.Common.NetHelper.GetClientIP(System.Net.Sockets.Socket)">
            <summary>
            获取远程客户机的IP地址
            </summary>
            <param name="clientSocket">客户端的socket对象</param>        
        </member>
        <member name="M:QJW.Common.NetHelper.CreateIPEndPoint(System.String,System.Int32)">
            <summary>
            创建一个IPEndPoint对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口号</param>        
        </member>
        <member name="M:QJW.Common.NetHelper.CreateTcpListener">
            <summary>
            创建一个自动分配IP和端口的TcpListener对象
            </summary>        
        </member>
        <member name="M:QJW.Common.NetHelper.CreateTcpListener(System.String,System.Int32)">
            <summary>
            创建一个TcpListener对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口</param>        
        </member>
        <member name="M:QJW.Common.NetHelper.CreateTcpSocket">
            <summary>
            创建一个基于TCP协议的Socket对象
            </summary>        
        </member>
        <member name="M:QJW.Common.NetHelper.CreateUdpSocket">
            <summary>
            创建一个基于UDP协议的Socket对象
            </summary>        
        </member>
        <member name="M:QJW.Common.NetHelper.GetLocalPoint(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:QJW.Common.NetHelper.GetLocalPoint_IP(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的IP地址
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:QJW.Common.NetHelper.GetLocalPoint_Port(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的端口号
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:QJW.Common.NetHelper.GetLocalPoint(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:QJW.Common.NetHelper.GetLocalPoint_IP(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的IP地址
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:QJW.Common.NetHelper.GetLocalPoint_Port(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的端口号
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:QJW.Common.NetHelper.BindEndPoint(System.Net.Sockets.Socket,System.Net.IPEndPoint)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>
            <param name="endPoint">要绑定的终结点</param>
        </member>
        <member name="M:QJW.Common.NetHelper.BindEndPoint(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>        
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口</param>
        </member>
        <member name="M:QJW.Common.NetHelper.StartListen(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            指定Socket对象执行监听，默认允许的最大挂起连接数为100
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
        </member>
        <member name="M:QJW.Common.NetHelper.StartListen(System.Net.Sockets.Socket,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:QJW.Common.NetHelper.StartListen(System.Net.Sockets.Socket,System.String,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="ip">监听的IP地址</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:QJW.Common.NetHelper.Connect(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            连接到基于TCP协议的服务器,连接成功返回true，否则返回false
            </summary>
            <param name="socket">Socket对象</param>
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口号</param>     
        </member>
        <member name="M:QJW.Common.NetHelper.SendMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:QJW.Common.NetHelper.SendMsg(System.Net.Sockets.Socket,System.String)">
            <summary>
            使用UTF8编码格式以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:QJW.Common.NetHelper.ReceiveMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式接收消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="buffer">接收消息的缓冲区</param>
        </member>
        <member name="M:QJW.Common.NetHelper.ReceiveMsg(System.Net.Sockets.Socket)">
            <summary>
            以同步方式接收消息，并转换为UTF8编码格式的字符串,使用5000字节的默认缓冲区接收。
            </summary>
            <param name="socket">socket对象</param>        
        </member>
        <member name="M:QJW.Common.NetHelper.Close(System.Net.Sockets.Socket)">
            <summary>
            关闭基于Tcp协议的Socket对象
            </summary>
            <param name="socket">要关闭的Socket对象</param>
        </member>
        <member name="M:QJW.Common.NetHelper.SendEmail(System.String,System.String,System.String,System.Boolean)">
            <summary>
            发送电子邮件,所有SMTP配置信息均在config配置文件中system.net节设置.
            </summary>
            <param name="receiveEmail">接收电子邮件的地址</param>
            <param name="msgSubject">电子邮件的标题</param>
            <param name="msgBody">电子邮件的正文</param>
            <param name="IsEnableSSL">是否开启SSL</param>
        </member>
        <member name="T:QJW.Common.UploadEventArgs">
            <summary>    
            上传数据参数    
            </summary>    
        </member>
        <member name="P:QJW.Common.UploadEventArgs.BytesSent">
            <summary>       
            已发送的字节数    
            </summary>    
        </member>
        <member name="P:QJW.Common.UploadEventArgs.TotalBytes">
            <summary>    
            总字节数    
            </summary>    
        </member>
        <member name="T:QJW.Common.DownloadEventArgs">
            <summary>    
            下载数据参数    
            </summary>    
        </member>
        <member name="P:QJW.Common.DownloadEventArgs.BytesReceived">
            <summary>    
            已接收的字节数    
            </summary>    
        </member>
        <member name="P:QJW.Common.DownloadEventArgs.TotalBytes">
            <summary>    
            总字节数    
            </summary>    
        </member>
        <member name="P:QJW.Common.DownloadEventArgs.ReceivedData">
            <summary>    
            当前缓冲区接收的数据    
            </summary>    
        </member>
        <member name="T:QJW.Common.WebClientHelper">
            <summary>
            网络客户端帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.WebClientHelper.#ctor">
            <summary>    
            创建WebClient的实例    
            </summary>    
        </member>
        <member name="P:QJW.Common.WebClientHelper.BufferSize">
            <summary>    
            设置发送和接收的数据缓冲大小    
            </summary>    
        </member>
        <member name="P:QJW.Common.WebClientHelper.ResponseHeaders">
            <summary>    
            获取响应头集合    
            </summary>    
        </member>
        <member name="P:QJW.Common.WebClientHelper.RequestHeaders">
            <summary>    
            获取请求头集合    
            </summary>    
        </member>
        <member name="P:QJW.Common.WebClientHelper.Proxy">
            <summary>    
            获取或设置代理    
            </summary>    
        </member>
        <member name="P:QJW.Common.WebClientHelper.Encoding">
            <summary>    
            获取或设置请求与响应的文本编码方式    
            </summary>    
        </member>
        <member name="P:QJW.Common.WebClientHelper.RespHtml">
            <summary>    
            获取或设置响应的html代码    
            </summary>    
        </member>
        <member name="P:QJW.Common.WebClientHelper.CookieContainer">
            <summary>    
            获取或设置与请求关联的Cookie容器    
            </summary>    
        </member>
        <member name="M:QJW.Common.WebClientHelper.GetHtml(System.String)">
            <summary>    
             获取网页源代码    
            </summary>    
            <param name="url">网址</param>    
            <returns></returns>    
        </member>
        <member name="M:QJW.Common.WebClientHelper.DownloadFile(System.String,System.String)">
            <summary>    
            下载文件    
            </summary>    
            <param name="url">文件URL地址</param>    
            <param name="filename">文件保存完整路径</param>    
        </member>
        <member name="M:QJW.Common.WebClientHelper.GetData(System.String)">
            <summary>    
            从指定URL下载数据    
            </summary>    
            <param name="url">网址</param>    
            <returns></returns>    
        </member>
        <member name="M:QJW.Common.WebClientHelper.Post(System.String,System.String)">
            <summary>    
            向指定URL发送文本数据    
            </summary>    
            <param name="url">网址</param>    
            <param name="postData">urlencode编码的文本数据</param>    
            <returns></returns>    
        </member>
        <member name="M:QJW.Common.WebClientHelper.Post(System.String,System.Byte[])">
            <summary>    
            向指定URL发送字节数据    
            </summary>    
            <param name="url">网址</param>    
            <param name="postData">发送的字节数组</param>    
            <returns></returns>    
        </member>
        <member name="M:QJW.Common.WebClientHelper.Post(System.String,QJW.Common.MultipartForm)">
            <summary>    
            向指定网址发送mulitpart编码的数据    
            </summary>    
            <param name="url">网址</param>    
            <param name="mulitpartForm">mulitpart form data</param>    
            <returns></returns>    
        </member>
        <member name="M:QJW.Common.WebClientHelper.GetData(System.Net.HttpWebRequest)">
            <summary>    
            读取请求返回的数据    
            </summary>    
            <param name="request">请求对象</param>    
            <returns></returns>    
        </member>
        <member name="M:QJW.Common.WebClientHelper.PostData(System.Net.HttpWebRequest,System.Byte[])">
            <summary>    
            发送请求数据    
            </summary>    
            <param name="request">请求对象</param>    
            <param name="postData">请求发送的字节数组</param>    
        </member>
        <member name="M:QJW.Common.WebClientHelper.CreateRequest(System.String,System.String)">
            <summary>    
            创建HTTP请求    
            </summary>    
            <param name="url">URL地址</param>    
            <returns></returns>    
        </member>
        <member name="M:QJW.Common.WebClientHelper.SaveCookiesToDisk">
            <summary>    
            将Cookie保存到磁盘    
            </summary>    
        </member>
        <member name="M:QJW.Common.WebClientHelper.LoadCookiesFromDisk">
            <summary>    
            从磁盘加载Cookie    
            </summary>    
        </member>
        <member name="T:QJW.Common.MultipartForm">
            <summary>    
            对文件和文本数据进行Multipart形式的编码    
            </summary>    
        </member>
        <member name="P:QJW.Common.MultipartForm.FormData">
            <summary>    
            获取编码后的字节数组    
            </summary>    
        </member>
        <member name="P:QJW.Common.MultipartForm.ContentType">
            <summary>    
            获取此编码内容的类型    
            </summary>    
        </member>
        <member name="P:QJW.Common.MultipartForm.StringEncoding">
            <summary>    
            获取或设置对字符串采用的编码类型    
            </summary>    
        </member>
        <member name="M:QJW.Common.MultipartForm.#ctor">
            <summary>    
            实例化    
            </summary>    
        </member>
        <member name="M:QJW.Common.MultipartForm.AddFlie(System.String,System.String)">
            <summary>    
            添加一个文件    
            </summary>    
            <param name="name">文件域名称</param>    
            <param name="filename">文件的完整路径</param>    
        </member>
        <member name="M:QJW.Common.MultipartForm.AddFlie(System.String,System.String,System.Byte[],System.Int32)">
            <summary>    
            添加一个文件    
            </summary>    
            <param name="name">文件域名称</param>    
            <param name="filename">文件名</param>    
            <param name="fileData">文件二进制数据</param>    
            <param name="dataLength">二进制数据大小</param>    
        </member>
        <member name="M:QJW.Common.MultipartForm.AddString(System.String,System.String)">
            <summary>    
            添加字符串    
            </summary>    
            <param name="name">文本域名称</param>    
            <param name="value">文本值</param>    
        </member>
        <member name="M:QJW.Common.MultipartForm.GetContentType(System.String)">
            <summary>    
            从注册表获取文件类型    
            </summary>    
            <param name="filename">包含扩展名的文件名</param>    
            <returns>如：application/stream</returns>    
        </member>
        <member name="T:QJW.Common.NPOIHelper">
            <summary>
            NPOI操作帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.NPOIHelper.Export(System.Data.DataTable,System.String,System.String)">
            <summary>  
            DataTable导出到Excel文件  
            </summary>  
            <param name="dtSource">源DataTable</param>  
            <param name="strHeaderText">表头文本</param>  
            <param name="strFileName">保存位置</param>  
        </member>
        <member name="M:QJW.Common.NPOIHelper.Export(System.Data.DataTable,System.String)">
            <summary>  
            DataTable导出到Excel的MemoryStream  
            </summary>  
            <param name="dtSource">源DataTable</param>  
            <param name="strHeaderText">表头文本</param>  
        </member>
        <member name="M:QJW.Common.NPOIHelper.Import(System.String)">
            <summary>读取excel  
            默认第一行为标头  
            </summary>  
            <param name="strFileName">excel文档路径</param>  
            <returns></returns>  
        </member>
        <member name="T:QJW.Common.BindDataControl">
            <summary>
            数据展示控件 绑定数据类
            </summary>
        </member>
        <member name="M:QJW.Common.BindDataControl.BindDataList(System.Web.UI.Control,System.Data.DataView)">
            <summary>
            简单绑定DataList
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
        <member name="M:QJW.Common.BindDataControl.BindDataReaderList(System.Web.UI.Control,System.Data.SqlClient.SqlDataReader)">
            <summary>
            SqlDataReader简单绑定DataList
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
        <member name="M:QJW.Common.BindDataControl.BindGridView(System.Web.UI.Control,System.Data.DataView)">
            <summary>
            简单绑定GridView
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
        <member name="M:QJW.Common.BindDataControl.BindRepeater(System.Web.UI.Control,System.Data.DataView)">
            <summary>
            绑定服务器控件 简单绑定Repeater
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
        <member name="T:QJW.Common.GridViewHelper">
            <summary>
            GridView操作相关类
            </summary>
        </member>
        <member name="M:QJW.Common.GridViewHelper.GetStrPartly(System.String,System.Int32)">
            <summary>
            截取内容长度
            </summary>
            <param name="o_Str">原字符串</param>
            <param name="len">截取长度</param>
            <returns>截取后字符串</returns>
        </member>
        <member name="M:QJW.Common.GridViewHelper.GetCellText(System.Web.UI.WebControls.TableCell)">
            <summary>
            获取单元格内容
            </summary>
            <param name="cell">TableCell</param>
            <returns>内容</returns>
        </member>
        <member name="M:QJW.Common.GridViewHelper.SetCellText(System.Web.UI.WebControls.TableCell,System.Int32)">
            <summary>
            设置单元格内容
            </summary>
            <param name="cell">TableCell</param>
            <param name="maxLen">最大长度</param>
        </member>
        <member name="M:QJW.Common.GridViewHelper.GridView2DataTable(System.Web.UI.WebControls.GridView)">
            <summary>
            从GridView的数据生成DataTable
            </summary>
            <param name="gv">GridView对象</param>
        </member>
        <member name="M:QJW.Common.GridViewHelper.ToDataTable(System.Collections.IList)">
            <summary>
            将集合类转换成DataTable
            </summary>
            <param name="list">集合</param>
        </member>
        <member name="M:QJW.Common.GridViewHelper.ToDataTable``1(System.Collections.Generic.IList{``0},System.String[])">
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <param name="propertyName">需要返回的列的列名</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="T:QJW.Common.PageBase">
            <summary>
            页面层(表示层)基类,所有页面继承该页面
            </summary>
        </member>
        <member name="M:QJW.Common.PageBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.PageBase.OnInit(System.EventArgs)">
            <summary>
            重写Page类的OnInit方法
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:QJW.Common.PageBase.PageBase_Error(System.Object,System.EventArgs)">
            <summary>
            错误处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:QJW.Common.PageBase.PageBase_Load(System.Object,System.EventArgs)">
            <summary>
            页面加载
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:QJW.Common.PageHelper">
            <summary>
            网页帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.PageHelper.LockPage(System.Web.UI.Page,System.Object[])">
            <summary>
            锁定页面上的一些组件
            </summary>
            <param name="page"></param>
            <param name="obj">不需锁定的控件</param>
        </member>
        <member name="M:QJW.Common.PageHelper.UnLockPage(System.Web.UI.Page,System.Object[])">
            <summary>
            解除锁定页面上的一些组件
            </summary>
            <param name="page"></param>
            <param name="obj">继续保持锁定的控件</param>
        </member>
        <member name="M:QJW.Common.PageHelper.LockControl(System.Web.UI.Page,System.Web.UI.Control)">
            <summary>
            禁用控件
            </summary>
            <param name="page"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:QJW.Common.PageHelper.UnLockControl(System.Web.UI.Page,System.Web.UI.Control)">
            <summary>
            开放控件
            </summary>
            <param name="page"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:QJW.Common.PageHelper.IsContains(System.Object[],System.Web.UI.Control)">
            <summary>
            数组中是否包含当前控件
            </summary>
            <param name="obj"></param>
            <param name="ctl"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.PageHelper.GetQueryString(System.String)">
            <summary>
            读取QueryString值
            </summary>
            <param name="queryStringName">QueryString名称</param>
            <returns>QueryString值</returns>
        </member>
        <member name="M:QJW.Common.PageHelper.Redirect(System.String)">
            <summary>
            页面跳转
            </summary>
            <param name="url">URL地址</param>
        </member>
        <member name="M:QJW.Common.PageHelper.GetRelativeLevel">
            <summary>
            获取当前请求页面相对于根目录的层级
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.PageHelper.GetClientBrowserVersion">
            <summary>
            返回客户端浏览器版本
            如果是IE类型，返回版本数字
            如果不是IE类型，返回-1
            </summary>
            <returns>一位数字版本号</returns>
        </member>
        <member name="M:QJW.Common.PageHelper.GetCurrentPage">
            <summary>
            得到当前页对象实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.PageHelper.GetPageName">
            <summary>
            从System.Web.HttpRequest的Url中获取所调用的页面名称
            </summary>
            <returns>页面名称</returns>
        </member>
        <member name="T:QJW.Common.PageValidate">
            <summary>
            页面数据校验类
            </summary>
        </member>
        <member name="M:QJW.Common.PageValidate.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.PageValidate.FetchInputDigit(System.Web.HttpRequest,System.String,System.Int32)">
            <summary>
            检查Request查询字符串的键值，是否是数字，最大长度限制
            </summary>
            <param name="req">Request</param>
            <param name="inputKey">Request的键值</param>
            <param name="maxLen">最大长度</param>
            <returns>返回Request查询字符串</returns>
        </member>
        <member name="M:QJW.Common.PageValidate.IsNumber(System.String)">
            <summary>
            是否数字字符串
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.PageValidate.IsNumberSign(System.String)">
            <summary>
            是否数字字符串 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.PageValidate.IsDecimal(System.String)">
            <summary>
            是否是浮点数
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.PageValidate.IsDecimalSign(System.String)">
            <summary>
            是否是浮点数 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.PageValidate.IsHasCHZN(System.String)">
            <summary>
            检测是否有中文字符
            </summary>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.PageValidate.IsEmail(System.String)">
            <summary>
            是否是浮点数 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.PageValidate.IsDateTime(System.String)">
            <summary>
            日期格式字符串判断
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.PageValidate.Text_Length(System.String)">
            <summary>   
            计算文本长度，区分中英文字符，中文算两个长度，英文算一个长度
            </summary>
            <param name="Text">需计算长度的字符串</param>
            <returns>int</returns>
        </member>
        <member name="M:QJW.Common.PageValidate.isContainSpecChar(System.String)">
            <summary>
            检查输入的参数是不是某些定义好的特殊字符：这个方法目前用于密码输入的安全检查
            </summary>
        </member>
        <member name="T:QJW.Common.ValidateImgPage">
            <summary>
            验证码图片基类
            </summary>
        </member>
        <member name="M:QJW.Common.ValidateImgPage.CreateImage(System.String)">
            <summary>
            创建图片
            </summary>
            <param name="checkCode"></param>
        </member>
        <member name="T:QJW.Common.WebSitePathHelper">
            <summary>
            网站路径操作类
            </summary>
        </member>
        <member name="T:QJW.Common.WebSitePathHelper.SortType">
            <summary>
            
            </summary>
        </member>
        <member name="F:QJW.Common.WebSitePathHelper.SortType.Photo">
            <summary>
            
            </summary>
        </member>
        <member name="F:QJW.Common.WebSitePathHelper.SortType.Article">
            <summary>
            
            </summary>
        </member>
        <member name="F:QJW.Common.WebSitePathHelper.SortType.Diary">
            <summary>
            
            </summary>
        </member>
        <member name="F:QJW.Common.WebSitePathHelper.SortType.Pic">
            <summary>
            
            </summary>
        </member>
        <member name="F:QJW.Common.WebSitePathHelper.SortType.Music">
            <summary>
            
            </summary>
        </member>
        <member name="F:QJW.Common.WebSitePathHelper.SortType.AddressList">
            <summary>
            
            </summary>
        </member>
        <member name="F:QJW.Common.WebSitePathHelper.SortType.Favorite">
            <summary>
            
            </summary>
        </member>
        <member name="M:QJW.Common.WebSitePathHelper.GetWebPath(System.String)">
            <summary>
            根据给出的相对地址获取网站绝对地址
            </summary>
            <param name="localPath">相对地址</param>
            <returns>绝对地址</returns>
        </member>
        <member name="M:QJW.Common.WebSitePathHelper.GetWebPath">
            <summary>
             获取网站绝对地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.WebSitePathHelper.GetFilePath(System.String)">
            <summary>
            根据相对路径或绝对路径获取绝对路径
            </summary>
            <param name="localPath">相对路径或绝对路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="T:QJW.Common.PDFOperation">
            <summary>
            PDF文档操作类
            </summary>
        </member>
        <member name="M:QJW.Common.PDFOperation.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.PDFOperation.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="type">页面大小(如"A4")</param>
        </member>
        <member name="M:QJW.Common.PDFOperation.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            构造函数
            </summary>
            <param name="type">页面大小(如"A4")</param>
            <param name="marginLeft">内容距左边框距离</param>
            <param name="marginRight">内容距右边框距离</param>
            <param name="marginTop">内容距上边框距离</param>
            <param name="marginBottom">内容距下边框距离</param>
        </member>
        <member name="M:QJW.Common.PDFOperation.SetBaseFont(System.String)">
            <summary>
            设置字体
            </summary>
        </member>
        <member name="M:QJW.Common.PDFOperation.SetFont(System.Single)">
            <summary>
            设置字体
            </summary>
            <param name="size">字体大小</param>
        </member>
        <member name="M:QJW.Common.PDFOperation.SetPageSize(System.String)">
            <summary>
            设置页面大小
            </summary>
            <param name="type">页面大小(如"A4")</param>
        </member>
        <member name="M:QJW.Common.PDFOperation.GetInstance(System.IO.Stream)">
            <summary>
            实例化文档
            </summary>
            <param name="os">文档相关信息（如路径，打开方式等）</param>
        </member>
        <member name="M:QJW.Common.PDFOperation.Open(System.IO.Stream)">
            <summary>
            打开文档对象
            </summary>
            <param name="os">文档相关信息（如路径，打开方式等）</param>
        </member>
        <member name="M:QJW.Common.PDFOperation.Close">
            <summary>
            关闭打开的文档
            </summary>
        </member>
        <member name="M:QJW.Common.PDFOperation.AddParagraph(System.String,System.Single)">
            <summary>
            添加段落
            </summary>
            <param name="content">内容</param>
            <param name="fontsize">字体大小</param>
        </member>
        <member name="M:QJW.Common.PDFOperation.AddParagraph(System.String,System.Single,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            添加段落
            </summary>
            <param name="content">内容</param>
            <param name="fontsize">字体大小</param>
            <param name="Alignment">对齐方式（1为居中，0为居左，2为居右）</param>
            <param name="SpacingAfter">段后空行数（0为默认值）</param>
            <param name="SpacingBefore">段前空行数（0为默认值）</param>
            <param name="MultipliedLeading">行间距（0为默认值）</param>
        </member>
        <member name="M:QJW.Common.PDFOperation.AddImage(System.String,System.Int32,System.Single,System.Single)">
            <summary>
            添加图片
            </summary>
            <param name="path">图片路径</param>
            <param name="Alignment">对齐方式（1为居中，0为居左，2为居右）</param>
            <param name="newWidth">图片宽（0为默认值，如果宽度大于页宽将按比率缩放）</param>
            <param name="newHeight">图片高</param>
        </member>
        <member name="M:QJW.Common.PDFOperation.AddAnchorReference(System.String,System.Single,System.String)">
            <summary>
            添加链接
            </summary>
            <param name="Content">链接文字</param>
            <param name="FontSize">字体大小</param>
            <param name="Reference">链接地址</param>
        </member>
        <member name="M:QJW.Common.PDFOperation.AddAnchorName(System.String,System.Single,System.String)">
            <summary>
            添加链接点
            </summary>
            <param name="Content">链接文字</param>
            <param name="FontSize">字体大小</param>
            <param name="Name">链接点名</param>
        </member>
        <member name="T:QJW.Common.PinYinHelper">
            <summary>
            中文转换拼音帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.PinYinHelper.GetPinYinChar(System.Char)">
            <summary>
            获取字符的拼音，没有音标
            </summary>
            <param name="ch">传入的字符</param>
            <returns>返回的字符的拼音</returns>
        </member>
        <member name="M:QJW.Common.PinYinHelper.GetPinYinStr(System.String)">
            <summary>
            获取字符串的拼音
            </summary>
            <param name="str">传入的字符串</param>
            <returns>返回字符串的声音</returns>
        </member>
        <member name="T:QJW.Common.RandomHelper">
            <summary>
            使用Random类生成伪随机数和字符串
            </summary>
        </member>
        <member name="M:QJW.Common.RandomHelper.GetRandomInt(System.Int32,System.Int32)">
            <summary>
            生成一个指定范围的随机整数，该随机数范围包括最小值，但不包括最大值
            </summary>
            <param name="minNum">最小值</param>
            <param name="maxNum">最大值</param>
        </member>
        <member name="M:QJW.Common.RandomHelper.GetRandomDouble">
            <summary>
            生成一个0.0到1.0的随机小数
            </summary>
        </member>
        <member name="M:QJW.Common.RandomHelper.GetRandomArray``1(``0[])">
            <summary>
            对一个数组进行随机排序
            </summary>
            <typeparam name="T">数组的类型</typeparam>
            <param name="arr">需要随机排序的数组</param>
        </member>
        <member name="M:QJW.Common.RandomHelper.GetRandomCode(System.String,System.Int32)">
            <summary>
            从字符串里随机得到，规定个数的字符串.
            </summary>
            <param name="allChar"></param>
            <param name="CodeCount"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.RandomHelper.GenerateCheckCodeNum(System.Int32)">
            <summary>
            随机生成不重复数字字符串
            </summary>
            <param name="codeCount"></param>
            <returns></returns>  
        </member>
        <member name="M:QJW.Common.RandomHelper.GenerateCheckCode(System.Int32)">
            <summary>
            随机生成不重复字符串（数字和字母混和）
            </summary>
            <param name="codeCount"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.RandomHelper.GetRandomString(System.Int32)">
            <summary>
            产生随机字符串（数字和字母混和）
            </summary>
            <returns>字符串</returns>
        </member>
        <member name="T:QJW.Common.RegexHelper">
            <summary>
            操作正则表达式的公共类
            </summary>    
        </member>
        <member name="M:QJW.Common.RegexHelper.IsMatch(System.String,System.String)">
            <summary>
            验证输入字符串是否与模式字符串匹配（忽略大小写），匹配返回true
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>        
        </member>
        <member name="M:QJW.Common.RegexHelper.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            验证输入字符串是否与模式字符串匹配，匹配返回true
            </summary>
            <param name="input">输入的字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="options">筛选条件</param>
        </member>
        <member name="T:QJW.Common.RegisterHelper">
            <summary>
            注册表辅助类
            </summary>
        </member>
        <member name="F:QJW.Common.RegisterHelper.baseKey">
            <summary>
            默认注册表基项
            </summary>
        </member>
        <member name="M:QJW.Common.RegisterHelper.#ctor">
            <summary>
            构造函数
            </summary>
            <param name="baseKey">基项的名称</param>
        </member>
        <member name="M:QJW.Common.RegisterHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="baseKey">基项的名称</param>
        </member>
        <member name="M:QJW.Common.RegisterHelper.SetValue(QJW.Common.RegisterHelper.KeyType,System.String,System.String,System.String)">
            <summary>
            写入注册表,如果指定项已经存在,则修改指定项的值
            </summary>
            <param name="keytype">注册表基项枚举</param>
            <param name="key">注册表项,不包括基项</param>
            <param name="name">值名称</param>
            <param name="values">值</param>
        </member>
        <member name="M:QJW.Common.RegisterHelper.GetValue(QJW.Common.RegisterHelper.KeyType,System.String,System.String)">
            <summary>
            读取注册表
            </summary>
            <param name="keytype">注册表基项枚举</param>
            <param name="key">注册表项,不包括基项</param>
            <param name="name">值名称</param>
            <returns>返回字符串</returns>
        </member>
        <member name="M:QJW.Common.RegisterHelper.DeleteValue(QJW.Common.RegisterHelper.KeyType,System.String,System.String)">
            <summary>
            删除注册表中的值
            </summary>
            <param name="keytype">注册表基项枚举</param>
            <param name="key">注册表项名称,不包括基项</param>
            <param name="name">值名称</param>
        </member>
        <member name="M:QJW.Common.RegisterHelper.DeleteSubKey(QJW.Common.RegisterHelper.KeyType,System.String)">
            <summary>
            删除注册表中的指定项
            </summary>
            <param name="keytype">注册表基项枚举</param>
            <param name="key">注册表中的项,不包括基项</param>
            <returns>返回布尔值,指定操作是否成功</returns>
        </member>
        <member name="M:QJW.Common.RegisterHelper.IsExist(QJW.Common.RegisterHelper.KeyType,System.String)">
            <summary>
            判断指定项是否存在
            </summary>
            <param name="keytype">基项枚举</param>
            <param name="key">指定项字符串</param>
            <returns>返回布尔值,说明指定项是否存在</returns>
        </member>
        <member name="M:QJW.Common.RegisterHelper.GetValues(QJW.Common.RegisterHelper.KeyType,System.String)">
            <summary>
            检索指定项关联的所有值
            </summary>
            <param name="keytype">基项枚举</param>
            <param name="key">指定项字符串</param>
            <returns>返回指定项关联的所有值的字符串数组</returns>
        </member>
        <member name="M:QJW.Common.RegisterHelper.SetObjectValue(QJW.Common.RegisterHelper.KeyType,System.String,System.Object)">
            <summary>
            将对象所有属性写入指定注册表中
            </summary>
            <param name="keytype">注册表基项枚举</param>
            <param name="key">注册表项,不包括基项</param>
            <param name="obj">传入的对象</param>
        </member>
        <member name="M:QJW.Common.RegisterHelper.GetRegistryKey(QJW.Common.RegisterHelper.KeyType)">
            <summary>
            返回RegistryKey对象
            </summary>
            <param name="keyType">注册表基项枚举</param>
            <returns></returns>
        </member>
        <member name="T:QJW.Common.RegisterHelper.KeyType">
            <summary>
            注册表基项枚举
            </summary>
        </member>
        <member name="F:QJW.Common.RegisterHelper.KeyType.HKEY_CLASS_ROOT">
            <summary>
            注册表基项 HKEY_CLASSES_ROOT
            </summary>
        </member>
        <member name="F:QJW.Common.RegisterHelper.KeyType.HKEY_CURRENT_USER">
            <summary>
            注册表基项 HKEY_CURRENT_USER
            </summary>
        </member>
        <member name="F:QJW.Common.RegisterHelper.KeyType.HKEY_LOCAL_MACHINE">
            <summary>
            注册表基项 HKEY_LOCAL_MACHINE
            </summary>
        </member>
        <member name="F:QJW.Common.RegisterHelper.KeyType.HKEY_USERS">
            <summary>
            注册表基项 HKEY_USERS
            </summary>
        </member>
        <member name="F:QJW.Common.RegisterHelper.KeyType.HKEY_CURRENT_CONFIG">
            <summary>
            注册表基项 HKEY_CURRENT_CONFIG
            </summary>
        </member>
        <member name="T:QJW.Common.RMBHelper">
            <summary> 
            人民币帮助类 
            </summary> 
        </member>
        <member name="M:QJW.Common.RMBHelper.CmycurD(System.Decimal)">
            <summary> 
            转换人民币大小金额 
            </summary> 
            <param name="num">金额</param> 
            <returns>返回大写形式</returns> 
        </member>
        <member name="M:QJW.Common.RMBHelper.CmycurD(System.String)">
            <summary> 
            一个重载，将字符串先转换成数字在调用CmycurD(decimal num) 
            </summary> 
            <param name="num">用户输入的金额，字符串形式未转成decimal</param> 
            <returns></returns> 
        </member>
        <member name="T:QJW.Common.SerializeHelper">
            <summary>
            序列化帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.SerializeHelper.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.SerializeHelper.Save(System.Object,System.String)">
            <summary>
            文件化XML序列化
            </summary>
            <param name="obj">对象</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:QJW.Common.SerializeHelper.Load(System.Type,System.String)">
            <summary>
            文件化XML反序列化
            </summary>
            <param name="type">对象类型</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:QJW.Common.SerializeHelper.ToXml``1(``0)">
            <summary>
            文本化XML序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:QJW.Common.SerializeHelper.FromXml``1(System.String)">
            <summary>
            文本化XML反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="M:QJW.Common.SerializeHelper.ToSoap``1(``0)">
            <summary>
            SoapFormatter序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:QJW.Common.SerializeHelper.FromSoap``1(System.String)">
            <summary>
            SoapFormatter反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="M:QJW.Common.SerializeHelper.ToBinary``1(``0)">
            <summary>
            BinaryFormatter序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:QJW.Common.SerializeHelper.FromBinary``1(System.String)">
            <summary>
            BinaryFormatter反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="T:QJW.Common.SessionHelper">
            <summary>
            Session操作类
            </summary>
        </member>
        <member name="M:QJW.Common.SessionHelper.Set(System.String,System.Object)">
            <summary>
            设置session
            </summary>
            <param name="name">session 名</param>
            <param name="val">session 值</param>
        </member>
        <member name="M:QJW.Common.SessionHelper.Add(System.String,System.String)">
            <summary>
            添加Session，调动有效期为20分钟
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValue">Session值</param>
        </member>
        <member name="M:QJW.Common.SessionHelper.AddStrArray(System.String,System.String[])">
            <summary>
            添加Session，调动有效期为20分钟
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValues">Session值数组</param>
        </member>
        <member name="M:QJW.Common.SessionHelper.Add(System.String,System.String,System.Int32)">
            <summary>
            添加Session
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValue">Session值</param>
            <param name="iExpires">调动有效期（分钟）</param>
        </member>
        <member name="M:QJW.Common.SessionHelper.AddStrArray(System.String,System.String[],System.Int32)">
            <summary>
            添加Session
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValues">Session值数组</param>
            <param name="iExpires">调动有效期（分钟）</param>
        </member>
        <member name="M:QJW.Common.SessionHelper.Get(System.String)">
            <summary>
            根据session名获取session对象
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.SessionHelper.GetStr(System.String)">
            <summary>
            读取某个Session对象字符串值
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <returns>Session对象字符串值</returns>
        </member>
        <member name="M:QJW.Common.SessionHelper.GetStrArray(System.String)">
            <summary>
            读取某个Session对象值数组
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <returns>Session对象值数组</returns>
        </member>
        <member name="M:QJW.Common.SessionHelper.Delete(System.String)">
            <summary>
            删除某个Session对象
            </summary>
            <param name="strSessionName">Session对象名称</param>
        </member>
        <member name="T:QJW.Common.StringHelper">
            <summary>
            字符串操作类
            </summary>
        </member>
        <member name="M:QJW.Common.StringHelper.GetStrList(System.String,System.Char,System.Boolean)">
            <summary>
            把字符串按照分隔符转换成 List
            </summary>
            <param name="str">源字符串</param>
            <param name="speater">分隔符</param>
            <param name="toLower">是否转换为小写</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.GetStrList(System.String,System.Char)">
            <summary>
            把字符串按照分隔符转换成 List
            </summary>
            <param name="str">源字符串</param>
            <param name="speater">分隔符</param>
            <param name="toLower">是否转换为小写</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.GetStrArray(System.String)">
            <summary>
            把字符串转 按照, 分割 换为数据
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.GetStrArray(System.String,System.Char)">
            <summary>
            分割字符串，按指定的字符分割
            </summary>
            <param name="str"></param>
            <param name="splitstr"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:QJW.Common.StringHelper.GetArrayStr(System.Collections.Generic.List{System.String},System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:QJW.Common.StringHelper.GetArrayStr(System.Collections.Generic.List{System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.GetArrayValueStr(System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.GetUniqueStrArray(System.String,System.Char)">
            <summary>
            把字符串按照指定分隔符装成 List 去除重复
            </summary>
            <param name="o_str"></param>
            <param name="sepeater"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.DelLastComma(System.String)">
            <summary>
            删除最后结尾的一个逗号
            </summary>
        </member>
        <member name="M:QJW.Common.StringHelper.DelLastChar(System.String,System.String)">
            <summary>
            删除最后结尾的指定字符后的字符
            </summary>
        </member>
        <member name="M:QJW.Common.StringHelper.ToDBC(System.String)">
             <summary>
             全角转半角的函数(DBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:QJW.Common.StringHelper.ToSBC(System.String)">
             <summary>
             半角转全角的函数(SBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>全角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>        
        </member>
        <member name="M:QJW.Common.StringHelper.GetCleanStyle(System.String,System.String)">
            <summary>
             将字符串样式转换为纯字符串
            </summary>
            <param name="StrList"></param>
            <param name="SplitString"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.GetNewStyle(System.String,System.String,System.String,System.String@)">
            <summary>
            将字符串转换为新样式
            </summary>
            <param name="StrList"></param>
            <param name="NewStyle"></param>
            <param name="SplitString"></param>
            <param name="Error"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.StrToId(System.String)">
            <summary>
            获取正确的Id，如果不是正整数，返回0
            </summary>
            <param name="_value"></param>
            <returns>返回正确的整数ID，失败返回0</returns>
        </member>
        <member name="M:QJW.Common.StringHelper.IsNumberId(System.String)">
            <summary>
            检查一个字符串是否是纯数字构成的，一般用于查询字符串参数的有效性验证。(0除外)
            </summary>
            <param name="_value">需验证的字符串。。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:QJW.Common.StringHelper.QuickValidate(System.String,System.String)">
            <summary>
            快速验证一个字符串是否符合指定的正则表达式。
            </summary>
            <param name="_express">正则表达式的内容。</param>
            <param name="_value">需验证的字符串。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:QJW.Common.StringHelper.GetMD5(System.String)">
            <summary>
            根据配置对指定字符串进行 MD5 加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.GetStrLength(System.String)">
            <summary>
            得到字符串长度，一个汉字长度为2
            </summary>
            <param name="inputString">参数字符串</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.ClipString(System.String,System.Int32)">
            <summary>
            截取指定长度字符串
            </summary>
            <param name="inputString">要处理的字符串</param>
            <param name="len">指定长度</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:QJW.Common.StringHelper.GetSubStr(System.String,System.Int32)">
            <summary>
            检查字符串最大长度，返回指定长度的串
            </summary>
            <param name="input">输入字符串</param>
            <param name="maxLength">最大长度</param>
            <returns></returns>			
        </member>
        <member name="M:QJW.Common.StringHelper.GetSqlText(System.String,System.Int32)">
            <summary>   
            截取文本，区分中英文字符，中文算两个长度，英文算一个长度，用于数据库存储
            </summary>
            <param name="str">待截取的字符串</param>
            <param name="length">需计算长度的字符串</param>
            <returns>string</returns>
        </member>
        <member name="M:QJW.Common.StringHelper.GetLeftStr(System.String,System.Int32)">
            <summary>
            从字符串左边起给定的位置截取字符串
            </summary>
            <param name="str">给定要截取的字符串内容</param>
            <param name="len">截取的起始位置</param>
            <returns>截取后的字符串 string</returns>
        </member>
        <member name="M:QJW.Common.StringHelper.HtmlToTxt(System.String)">
            <summary>
            HTML转行成TEXT
            </summary>
            <param name="strHtml"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.safeInt(System.String)">
            <summary>
            返回安全整数类型
            </summary>
            <param name="str">要转换的字符串</param>
            <returns>int16 整形数字</returns>
        </member>
        <member name="M:QJW.Common.StringHelper.safeStr(System.String)">
            <summary>
            转化为安全字符串 去除其中的英文单引号
            </summary>
            <param name="str">字符串内容</param>
            <returns>string 处理后的</returns>
        </member>
        <member name="M:QJW.Common.StringHelper.safeText(System.String)">
            <summary>
            把字符串转化为安全的text内容
            </summary>
            <param name="str">传入的字符串内容</param>
            <returns>转化后结果 string</returns>
        </member>
        <member name="M:QJW.Common.StringHelper.safeStrToSource(System.String)">
            <summary>
            把'还原成单引号
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.safeTextToSource(System.String)">
            <summary>
            把经过安全的text内容转化为源字符串
            </summary>
            <param name="str">传入的字符串内容</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.IsSafeSql(System.String)">
            <summary>
            是否安全
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.SafeSql(System.String)">
            <summary>
            替换不安全sql
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.GetRandomCode(System.String,System.Int32)">
            <summary>
            从字符串里随机得到，规定个数的字符串.
            </summary>
            <param name="allChar"></param>
            <param name="CodeCount"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.StringHelper.StrToHtml(System.String)">
            <summary>
            转换成 HTML code
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:QJW.Common.StringHelper.HtmlToStr(System.String)">
             <summary>
            解析html成 普通文本
             </summary>
             <param name="str">string</param>
             <returns>string</returns>
        </member>
        <member name="M:QJW.Common.StringHelper.ClearInputText(System.String,System.Int32)">
            <summary>
            清除字符串中的危险字符
            </summary>
            <param name="inputString"></param>
            <param name="maxLength"></param>
            <returns></returns>
        </member>
        <member name="T:QJW.Common.SysHelper">
            <summary>
            系统操作相关的公共类
            </summary>    
        </member>
        <member name="M:QJW.Common.SysHelper.GetPath(System.String)">
            <summary>
            获取文件相对路径映射的物理路径
            </summary>
            <param name="virtualPath">文件的相对路径</param>        
        </member>
        <member name="M:QJW.Common.SysHelper.GetMethodName(System.Int32)">
            <summary>
            获取指定调用层级的方法名
            </summary>
            <param name="level">调用的层数</param>        
        </member>
        <member name="P:QJW.Common.SysHelper.NewGUID">
            <summary>
            获取GUID值
            </summary>
        </member>
        <member name="P:QJW.Common.SysHelper.NewLine">
            <summary>
            获取换行字符
            </summary>
        </member>
        <member name="P:QJW.Common.SysHelper.CurrentAppDomain">
            <summary>
            获取当前应用程序域
            </summary>
        </member>
        <member name="T:QJW.Common.UrlHelper">
            <summary>
            URL的操作类
            </summary>
        </member>
        <member name="M:QJW.Common.UrlHelper.IsBase64(System.String)">
            <summary>
            是否是Base64字符串
            </summary>
            <param name="eStr"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.UrlHelper.AddParam(System.String,System.String,System.String)">
            <summary>
            添加URL参数
            </summary>
        </member>
        <member name="M:QJW.Common.UrlHelper.UpdateParam(System.String,System.String,System.String)">
            <summary>
            更新URL参数
            </summary>
        </member>
        <member name="M:QJW.Common.UrlHelper.ParseUrl(System.String,System.String@,System.Collections.Specialized.NameValueCollection@)">
            <summary>
            分析 url 字符串中的参数信息
            </summary>
            <param name="url">输入的 URL</param>
            <param name="baseUrl">输出 URL 的基础部分</param>
            <param name="nvc">输出分析后得到的 (参数名,参数值) 的集合</param>
        </member>
        <member name="T:QJW.Common.ValidatorHelper">
            <summary>
            各种验证帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsEmail(System.String)">
            <summary>
            验证邮箱
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsUrl(System.String)">
            <summary>
            验证网址
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsDateTime(System.String)">
            <summary>
            验证日期
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsMobile(System.String)">
            <summary>
            验证手机号
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsIP(System.String)">
            <summary>
            验证IP
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsIDCard(System.String)">
            <summary>
            验证身份证是否有效
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsInt(System.String)">
            <summary>
            是不是Int型的
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsLengthStr(System.String,System.Int32,System.Int32)">
            <summary>
            看字符串的长度是不是在限定数之间 一个中文为两个字符
            </summary>
            <param name="source">字符串</param>
            <param name="begin">大于等于</param>
            <param name="end">小于等于</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsTel(System.String)">
            <summary>
            是不是中国电话，格式010-85849685
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsPostCode(System.String)">
            <summary>
            邮政编码 6个数字
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsChinese(System.String)">
            <summary>
            中文
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsNormalChar(System.String)">
            <summary>
            验证是不是正常字符 字母，数字，下划线的组合
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.checkUserId(System.String)">
            <summary>
            验证用户名：必须以字母开头，可以包含字母、数字、“_”、“.”，至少5个字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsNumber(System.String)">
            <summary>
            判断字符串是否为数字
            </summary>
            <param name="str">待验证的字符窜</param>
            <returns>bool</returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsDecimal(System.String)">
            <summary>
            是否为数字型
            </summary>
            <param name="strNumber"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsHanyu(System.String)">
            <summary>
            验证是否包含汉语
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Common.ValidatorHelper.IsHanyuAll(System.String)">
            <summary>
            验证是否全部汉语
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:QJW.Common.VerifyCodeHelper">
            <summary>
            验证图片类
            </summary>
        </member>
        <member name="P:QJW.Common.VerifyCodeHelper.Text">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:QJW.Common.VerifyCodeHelper.Image">
            <summary>
            验证码图片
            </summary>
        </member>
        <member name="M:QJW.Common.VerifyCodeHelper.Next(System.Int32)">
            <summary>
            获得下一个随机数
            </summary>
            <param name="max">最大值</param>
        </member>
        <member name="M:QJW.Common.VerifyCodeHelper.Next(System.Int32,System.Int32)">
            <summary>
            获得下一个随机数
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:QJW.Common.VerifyCodeHelper.CreateImage">
            <summary>
            绘制验证码
            </summary>
        </member>
        <member name="M:QJW.Common.VerifyCodeHelper.GetRandomColor">
            <summary>
            字体随机颜色
            </summary>
        </member>
        <member name="M:QJW.Common.VerifyCodeHelper.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高,一般为3</param>
            <param name="dPhase">波形的起始相位,取值区间[0-2*PI)</param>
        </member>
        <member name="T:QJW.Common.VerifyCodeRand">
            <summary>
            验证码类
            </summary>
        </member>
        <member name="M:QJW.Common.VerifyCodeRand.Number(System.Int32)">
            <summary>
            生成随机数字
            </summary>
            <param name="length">生成长度</param>
        </member>
        <member name="M:QJW.Common.VerifyCodeRand.Number(System.Int32,System.Boolean)">
            <summary>
            生成随机数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="M:QJW.Common.VerifyCodeRand.Str(System.Int32)">
            <summary>
            生成随机字母与数字
            </summary>
            <param name="IntStr">生成长度</param>
        </member>
        <member name="M:QJW.Common.VerifyCodeRand.Str(System.Int32,System.Boolean)">
            <summary>
            生成随机字母与数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="M:QJW.Common.VerifyCodeRand.Str_char(System.Int32)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="IntStr">生成长度</param>
        </member>
        <member name="M:QJW.Common.VerifyCodeRand.Str_char(System.Int32,System.Boolean)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="T:QJW.Common.VideoHelper">
            <summary>
            视频帮助类
            </summary>
        </member>
        <member name="M:QJW.Common.VideoHelper.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.VideoHelper.GetFileName(System.String)">
            <summary>
            获取文件的名字
            </summary>
        </member>
        <member name="M:QJW.Common.VideoHelper.GetExtension(System.String)">
            <summary>
            获取文件扩展名
            </summary>
        </member>
        <member name="M:QJW.Common.VideoHelper.CheckExtension(System.String)">
            <summary>
            获取文件类型
            </summary>
        </member>
        <member name="M:QJW.Common.VideoHelper.ConvertFlv(System.String,System.String)">
            <summary>
            视频格式转为Flv
            </summary>
            <param name="vFileName">原视频文件地址</param>
            <param name="ExportName">生成后的Flv文件地址</param>
        </member>
        <member name="M:QJW.Common.VideoHelper.CatchImg(System.String)">
            <summary>
            生成Flv视频的缩略图
            </summary>
            <param name="vFileName">视频文件地址</param>
        </member>
        <member name="M:QJW.Common.VideoHelper.ChangeFilePhy(System.String,System.String,System.String)">
            <summary>
            转换文件并保存在指定文件夹下
            </summary>
            <param name="fileName">上传视频文件的路径（原文件）</param>
            <param name="playFile">转换后的文件的路径（网络播放文件）</param>
            <param name="imgFile">从视频文件中抓取的图片路径</param>
            <returns>成功:返回图片虚拟地址;失败:返回空字符串</returns>
        </member>
        <member name="M:QJW.Common.VideoHelper.ChangeFileVir(System.String,System.String,System.String)">
            <summary>
            转换文件并保存在指定文件夹下
            </summary>
            <param name="fileName">上传视频文件的路径（原文件）</param>
            <param name="playFile">转换后的文件的路径（网络播放文件）</param>
            <param name="imgFile">从视频文件中抓取的图片路径</param>
            <returns>成功:返回图片虚拟地址;失败:返回空字符串</returns>
        </member>
        <member name="M:QJW.Common.VideoHelper.MChangeFilePhy(System.String,System.String,System.String)">
            <summary>
            运行mencoder的视频解码器转换
            </summary>
        </member>
        <member name="T:QJW.Common.XmlHelper">
            <summary>
            Xml的操作公共类
            </summary>    
        </member>
        <member name="F:QJW.Common.XmlHelper._filePath">
            <summary>
            XML文件的物理路径
            </summary>
        </member>
        <member name="F:QJW.Common.XmlHelper._xml">
            <summary>
            Xml文档
            </summary>
        </member>
        <member name="F:QJW.Common.XmlHelper._element">
            <summary>
            XML的根节点
            </summary>
        </member>
        <member name="M:QJW.Common.XmlHelper.#ctor(System.String)">
            <summary>
            实例化XmlHelper对象
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>
        </member>
        <member name="M:QJW.Common.XmlHelper.CreateXMLElement">
            <summary>
            创建XML的根节点
            </summary>
        </member>
        <member name="M:QJW.Common.XmlHelper.GetNode(System.String)">
            <summary>
            获取指定XPath表达式的节点对象
            </summary>        
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:QJW.Common.XmlHelper.GetValue(System.String)">
            <summary>
            获取指定XPath表达式节点的值
            </summary>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:QJW.Common.XmlHelper.GetAttributeValue(System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的属性值
            </summary>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
            <param name="attributeName">属性名</param>
        </member>
        <member name="M:QJW.Common.XmlHelper.AppendNode(System.Xml.XmlNode)">
            <summary>
            1. 功能：新增节点。
            2. 使用条件：将任意节点插入到当前Xml文件中。
            </summary>        
            <param name="xmlNode">要插入的Xml节点</param>
        </member>
        <member name="M:QJW.Common.XmlHelper.AppendNode(System.Data.DataSet)">
            <summary>
            1. 功能：新增节点。
            2. 使用条件：将DataSet中的第一条记录插入Xml文件中。
            </summary>        
            <param name="ds">DataSet的实例，该DataSet中应该只有一条记录</param>
        </member>
        <member name="M:QJW.Common.XmlHelper.RemoveNode(System.String)">
            <summary>
            删除指定XPath表达式的节点
            </summary>        
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:QJW.Common.XmlHelper.Save">
            <summary>
            保存XML文件
            </summary>        
        </member>
        <member name="M:QJW.Common.XmlHelper.CreateRootElement(System.String)">
            <summary>
            创建根节点对象
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>        
        </member>
        <member name="M:QJW.Common.XmlHelper.GetValue(System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的值
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:QJW.Common.XmlHelper.GetAttributeValue(System.String,System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的属性值
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
            <param name="attributeName">属性名</param>
        </member>
        <member name="T:QJW.Common.XmlHelperExt">
            <summary>
            xml操作帮助扩展类
            </summary>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="strPath">xml文件路径</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.XMLLoad">
            <summary>
            导入XML文件
            </summary>
            <param name="XMLPath">XML文件路径</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.XMLLoad(System.String)">
            <summary>
            导入XML文件
            </summary>
            <param name="XMLPath">XML文件路径</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.GetXmlFullPath(System.String)">
            <summary>
            返回完整路径
            </summary>
            <param name="strPath">Xml的路径</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.Read(System.String)">
            <summary>
            读取指定节点的数据
            </summary>
            <param name="node">节点</param>
            使用示列:
            XMLProsess.Read("/Node", "")
            XMLProsess.Read("/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:QJW.Common.XmlHelperExt.Read(System.String,System.String)">
            <summary>
            读取指定路径和节点的串联值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:QJW.Common.XmlHelperExt.Read(System.String,System.String,System.String)">
            <summary>
            读取指定路径和节点的属性值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']", "Attribute")
        </member>
        <member name="M:QJW.Common.XmlHelperExt.ReadAllChildallValue(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.ReadAllChild(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.GetDataViewByXml(System.String,System.String)">
            <summary> 
            读取XML返回经排序或筛选后的DataView
            </summary>
            <param name="strWhere">筛选条件，如:"name='kgdiwss'"</param>
            <param name="strSort"> 排序条件，如:"Id desc"</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.GetDataSetByXml(System.String)">
            <summary>
            读取XML返回DataSet
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.Insert(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="attribute">属性名，非空时插入该元素属性值，否则插入元素值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "Element", "", "Value")
            XMLProsess.Insert(path, "/Node", "Element", "Attribute", "Value")
            XMLProsess.Insert(path, "/Node", "", "Attribute", "Value")
        </member>
        <member name="M:QJW.Common.XmlHelperExt.Insert(System.String,System.String,System.String,System.String[][])">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="strList">由XML属性名和值组成的二维数组</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.WriteXmlByDataSet(System.String,System.String[],System.String[])">
            <summary>
            插入一行数据
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
            <param name="Columns">要插入行的列名数组，如：string[] Columns = {"name","IsMarried"};</param>
            <param name="ColumnValue">要插入行每列的值数组，如：string[] ColumnValue={"XML大全","false"};</param>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.Update(System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="node">节点</param>
            <param name="value">值</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.Update(System.String,System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node","Value")
            XMLProsess.Insert(path, "/Node","Value")
        </member>
        <member name="M:QJW.Common.XmlHelperExt.Update(System.String,System.String,System.String,System.String)">
            <summary>
            修改指定节点的属性值(静态)
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时修改该节点属性值，否则修改节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "", "Value")
            XMLProsess.Insert(path, "/Node", "Attribute", "Value")
        </member>
        <member name="M:QJW.Common.XmlHelperExt.UpdateXmlRow(System.String,System.String[],System.String[],System.String,System.String)">
            <summary>
            更改符合条件的一条记录
            </summary>
            <param name="strXmlPath">XML文件路径</param>
            <param name="Columns">列名数组</param>
            <param name="ColumnValue">列值数组</param>
            <param name="strWhereColumnName">条件列名</param>
            <param name="strWhereColumnValue">条件列值</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.Delete(System.String,System.String)">
            <summary>
            删除节点值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:QJW.Common.XmlHelperExt.Delete(System.String,System.String,System.String)">
            <summary>
            删除数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:QJW.Common.XmlHelperExt.DeleteXmlAllRows(System.String)">
            <summary>
            删除所有行
            </summary>
            <param name="strXmlPath">XML路径</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.DeleteXmlRowByIndex(System.String,System.Int32)">
            <summary>
            通过删除DataSet中指定索引行，重写XML以实现删除指定行
            </summary>
            <param name="iDeleteRow">要删除的行在DataSet中的Index值</param>
        </member>
        <member name="M:QJW.Common.XmlHelperExt.DeleteXmlRows(System.String,System.String,System.String[])">
            <summary>
            删除指定列中指定值的行
            </summary>
            <param name="strXmlPath">XML相对路径</param>
            <param name="strColumn">列名</param>
            <param name="ColumnValue">指定值</param>
        </member>
        <member name="T:QJW.Common.ZipHelper">
            <summary>
            Zip压缩、解压缩类
            </summary>
        </member>
        <member name="M:QJW.Common.ZipHelper.EnZip(System.String,System.String)">
            <summary>
            压缩
            </summary> 
            <param name="filename"> 压缩后的文件名(包含物理路径)</param>
            <param name="directory">待压缩的文件夹(包含物理路径)</param>
        </member>
        <member name="M:QJW.Common.ZipHelper.EnZip(System.String,System.String,System.Int32)">
            <summary>
            压缩
            </summary>
            <param name="FileToZip">待压缩的文件目录</param>
            <param name="ZipedFile">生成的目标文件</param>
            <param name="level">6</param>
        </member>
        <member name="M:QJW.Common.ZipHelper.UnZip(System.String,System.String)">
            <summary>
            解压
            </summary>
            <param name="FileToUpZip">待解压的文件</param>
            <param name="ZipedFolder">解压目标存放目录</param>
        </member>
        <member name="M:QJW.Common.ZipHelper.ZipFileDictory(System.String,ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String)">
            <summary>
            递归压缩文件夹方法
            </summary>
        </member>
        <member name="M:QJW.Common.ZipHelper.ZipFileDictory(System.String,System.String,System.Int32)">
            <summary>
            压缩目录
            </summary>
            <param name="FolderToZip">待压缩的文件夹，全路径格式</param>
            <param name="ZipedFile">压缩后的文件名，全路径格式</param>
        </member>
        <member name="M:QJW.Common.ZipHelper.ZipFile(System.String,System.String,System.Int32)">
            <summary>
            压缩文件
            </summary>
            <param name="FileToZip">要进行压缩的文件名</param>
            <param name="ZipedFile">压缩后生成的压缩文件名</param>
        </member>
        <member name="T:QJW.CookieHelper">
            <summary>
            类说明：CookieHelper
            联系方式：361983679  
            更新网站：[url=http://www.sufeinet.com/thread-655-1-1.html]http://www.sufeinet.com/thread-655-1-1.html[/url]
            </summary>
        </member>
        <member name="M:QJW.CookieHelper.ClearCookie(System.String)">
            <summary>
            清除指定Cookie
            </summary>
            <param name="cookiename">cookiename</param>
        </member>
        <member name="M:QJW.CookieHelper.GetCookieValue(System.String)">
            <summary>
            获取指定Cookie值
            </summary>
            <param name="cookiename">cookiename</param>
            <returns></returns>
        </member>
        <member name="M:QJW.CookieHelper.SetCookie(System.String,System.String)">
            <summary>
            添加一个Cookie（24小时过期）
            </summary>
            <param name="cookiename"></param>
            <param name="cookievalue"></param>
        </member>
        <member name="M:QJW.CookieHelper.SetCookie(System.String,System.String,System.DateTime)">
            <summary>
            添加一个Cookie
            </summary>
            <param name="cookiename">cookie名</param>
            <param name="cookievalue">cookie值</param>
            <param name="expires">过期时间 DateTime</param>
        </member>
        <member name="M:QJW.Easp.GetQRCode(System.String)">
            <summary>
            生成二维码，返回二维码的相对路径
            </summary>
            <param name="url">二维码url</param>
            <returns>二维码图片相对路径</returns>
        </member>
        <member name="M:QJW.Easp.GetQRCode(System.String,System.Int32)">
            <summary>
            生成二维码，返回二维码的相对路径
            </summary>
            <param name="url">二维码url</param>
            <param name="version">二维码版本号</param>
            <returns>二维码图片相对路径</returns>
        </member>
        <member name="M:QJW.Easp.GetQRCode(System.String,System.Int32,System.String)">
            <summary>
            生成二维码，返回二维码的相对路径
            </summary>
            <param name="url">二维码url</param>
            <param name="version">二维码版本号</param>
            <param name="path">相对路径：/upload/20160708/123456789.jpg</param>
            <returns>二维码图片相对路径</returns>
        </member>
        <member name="M:QJW.Easp.IsMobile">
            <summary>
            是否是移动端访问
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.GetUrl">
            <summary>
            获取当前网页地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.GetReferer">
            <summary>
            来路地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.Alert(System.String)">
            <summary>
            提示并返回
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.AlertUrl(System.String,System.String)">
            <summary>
            提示并跳转
            </summary>
            <param name="message"></param>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.W(System.String)">
            <summary>
            输出
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:QJW.Easp.WN(System.String)">
            <summary>
            输出并换行
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:QJW.Easp.WE(System.String)">
            <summary>
            输出并结束
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:QJW.Easp.RR(System.String)">
            <summary>
            跳转url
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:QJW.Easp.Cache(System.String)">
            <summary>
            获得缓存名为key的值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.CacheSet(System.String,System.Object)">
            <summary>
            设置缓存值
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:QJW.Easp.Get(System.String)">
            <summary>
            安全获取QueryString值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.Get(System.String,System.String)">
            <summary>
            安全获取QueryString值，如空则返回默认值
            </summary>
            <param name="name"></param>
            <param name="defaultvalue"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.GetInt(System.String)">
            <summary>
            安全获取ID值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.GetInt(System.String,System.Int32)">
            <summary>
            安全获取ID值
            </summary>
            <param name="name"></param>
            <param name="defaultvalue"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.Post(System.String)">
            <summary>
            安全获取Form值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.Post(System.String,System.String)">
            <summary>
            安全获取Form值
            </summary>
            <param name="name"></param>
            <param name="defaultvalue"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.PostInt(System.String)">
            <summary>
            安全获取Form中ID值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.PostInt(System.String,System.Int32)">
            <summary>
            安全获取Form中ID值
            </summary>
            <param name="name"></param>
            <param name="defaultvalue"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.Exec(System.String,System.String)">
            <summary>
            运行sql语句
            </summary>
            <param name="sql"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.ExeScalar``1(System.String,System.String)">
            <summary>
            运行sql并返回首行首列
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sql"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.ExeMDataTable(System.String,System.String)">
            <summary>
            返回MDataTable表数据
            </summary>
            <param name="sql"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.ExeMDataTable(System.String,System.String,System.String)">
            <summary>
            返回MDataTable表数据
            </summary>
            <param name="table"></param>
            <param name="top"></param>
            <param name="where"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.ExeMDataTable(System.String,System.Int32,System.String,System.String)">
            <summary>
            返回MDataTable表数据
            </summary>
            <param name="table"></param>
            <param name="top"></param>
            <param name="where"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.ExeMDataTable(System.String,System.Int32,System.Int32,System.String,System.Int32@,System.String)">
            <summary>
            返回MDataTable表数据
            </summary>
            <param name="table"></param>
            <param name="page"></param>
            <param name="pagesize"></param>
            <param name="where"></param>
            <param name="total"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.Create``1(System.Object,System.Object)">
            <summary>
            创建空行，返回实体，默认值均已赋值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.Create``1(System.Object,System.Object,CYQ.Data.InsertOp)">
            <summary>
            创建空行，返回实体，默认值均已赋值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <param name="op"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.GetMAction``1">
            <summary>
            获取实体对应的MAction对像
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.GetTableName``1(System.String@)">
            <summary>
            获取实体对应的表名
            </summary>
            <typeparam name="T"></typeparam>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.EncryptString(System.String)">
            <summary>
            DES加密字符串
            </summary>
            <param name="plaintext"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.EncryptString(System.String,System.String)">
            <summary>   
            利用DES加密算法加密字符串（可解密）   
            </summary>   
            <param name="plaintext">被加密的字符串</param>   
            <param name="key">密钥（只支持8个字节的密钥）</param>   
            <returns>加密后的字符串</returns>   
        </member>
        <member name="M:QJW.Easp.DecryptString(System.String)">
            <summary>
            DES解密字符串
            </summary>
            <param name="plaintext"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.DecryptString(System.String,System.String)">
            <summary>   
            利用DES解密算法解密密文（可解密）   
            </summary>   
            <param name="ciphertext">被解密的字符串</param>   
            <param name="key">密钥（只支持8个字节的密钥，同前面的加密密钥相同）</param>   
            <returns>返回被解密的字符串</returns>   
        </member>
        <member name="M:QJW.Easp.MD5(System.String)">
            <summary>
            返回MD5字符（32位大写字母），取16位则 Substring(8,16)
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.MD5(System.String,System.Int32)">
            <summary>
            返回MD5字符（16位大写字母）
            </summary>
            <param name="str"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.UniqueID">
            <summary>
            获得唯一ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.DownloadImg(System.String)">
            <summary>
            下载远程图片到/upload/yyyyMMdd/xxxx.jpg
            </summary>
            <param name="URL">图片url</param>
            <returns>/upload/yyyyMMdd/xxxx.jpg</returns>
        </member>
        <member name="M:QJW.Easp.GetHtml(System.String)">
            <summary>
            获取远程html源码
            </summary>
            <param name="url">网址</param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.GetElements(System.String,System.String)">
            <summary>
            获取html源码中，指定css名的节点集
            </summary>
            <param name="html"></param>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.GetElement(System.String,System.String)">
            <summary>
            获取html源码中，指定css名的节点集首个节点
            </summary>
            <param name="html"></param>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.GetElement(Ivony.Html.IHtmlElement,System.String)">
            <summary>
            查找节点里，指定名为css的节点
            </summary>
            <param name="e"></param>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.GetElementHtml(System.String,System.String)">
            <summary>
            获取html源码中，指定css名的节点html内容
            </summary>
            <param name="html"></param>
            <param name="css"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.Easp.GetRegValue(System.String,System.String)">
            <summary>
            执行正则提取出值
            </summary>
            <param name="RegexString">正则表达式</param>
            <param name="RemoteStr">HtmlCode源代码</param>
            <returns></returns>
        </member>
        <member name="T:QJW.IdentityGenerator">
            <summary>
            简单Id生成器
            </summary>
        </member>
        <member name="F:QJW.IdentityGenerator.ht">
            <summary>
            随机数缓存
            </summary>
        </member>
        <member name="F:QJW.IdentityGenerator.lastTimeStampStyleTicks">
            <summary>
            时间戳刻度缓存
            </summary>
        </member>
        <member name="F:QJW.IdentityGenerator.lastEndDateTimeTicks">
            <summary>
            时间戳缓存（上一次计算ID的系统时间按时间戳刻度取值）
            </summary>
        </member>
        <member name="F:QJW.IdentityGenerator.ig">
            <summary>
            IdentityGenerator的静态实例
            </summary>
        </member>
        <member name="M:QJW.IdentityGenerator.GetTimestamp(System.DateTime,System.Int64)">
            <summary>
            按照时间戳刻度计算当前时间戳
            </summary>
            <param name="startDateTime">起始时间</param>
            <param name="timestampStyleTicks">时间戳刻度值</param>
            <returns>long</returns>
        </member>
        <member name="F:QJW.IdentityGenerator.random">
            <summary>
            静态随机数生成器
            </summary>
        </member>
        <member name="M:QJW.IdentityGenerator.GetRandom(System.Int32)">
            <summary>
            获取随机数
            </summary>
            <param name="length">随机数长度</param>
            <returns></returns>
        </member>
        <member name="M:QJW.IdentityGenerator.GetIdentity">
            <summary>
            计算一个Id
            以2005-1-1 00:00 000为起始时间刻度
            </summary>
            <returns>long</returns>
        </member>
        <member name="M:QJW.IdentityGenerator.GetIdentity(QJW.TimestampStyle)">
            <summary>
            计算一个Id
            以2005-1-1 00:00 000为起始时间刻度
            </summary>
            <param name="timestampStyle">时间戳刻度</param>
            <returns>long</returns>
        </member>
        <member name="M:QJW.IdentityGenerator.GetIdentity(System.Int32)">
            <summary>
            计算一个Id
            </summary>
            <param name="randomLength">随机数长度</param>
            <returns>long</returns>
        </member>
        <member name="M:QJW.IdentityGenerator.GetIdentity(QJW.TimestampStyle,System.Int32)">
            <summary>
            计算一个Id
            </summary>
            <param name="timestampStyle">时间戳刻度</param>
            <param name="randomLength">随机数长度</param>
            <returns>long</returns>
        </member>
        <member name="M:QJW.IdentityGenerator.GetIdentity(System.DateTime,QJW.TimestampStyle,System.Int32)">
            <summary>
            计算一个Id
            </summary>
            <param name="startDateTime">时间戳的起始时间</param>
            <param name="timestampStyle">时间戳刻度</param>
            <param name="randomLength">随机数长度</param>
            <returns>long</returns>
        </member>
        <member name="M:QJW.IdentityGenerator.GetIdentity(System.DateTime,System.Int64,System.Int32)">
            <summary>
            计算一个Id
            </summary>
            <param name="startDateTime">时间戳的起始时间</param>
            <param name="timestampStyleTicks">时间戳刻度(毫微秒单位)</param>
            <param name="randomLength">随机数长度</param>
            <returns>long</returns>
        </member>
        <!-- 对于成员“T:QJW.TimestampStyle”忽略有格式错误的 XML 注释 -->
        <member name="F:QJW.TimestampStyle.MillSecondTicks">
            <summary>
            时间刻度精度取为1毫秒（此项无意义，因为一般PC机系统时钟只能精确到10毫秒）
            </summary>
        </member>
        <member name="F:QJW.TimestampStyle.TenMillSecondTicks">
            <summary>
            时间刻度精度取为10毫秒，这是一般PC机系统时钟的最小精度单位
            </summary>
        </member>
        <member name="F:QJW.TimestampStyle.HundredMillSecondTicks">
            <summary>
            时间刻度精度取为100毫秒
            </summary>
        </member>
        <member name="F:QJW.TimestampStyle.SecondTicks">
            <summary>
            时间刻度精度取为1秒，即1000毫秒
            </summary>
        </member>
        <member name="F:QJW.TimestampStyle.FiveSecondTicks">
            <summary>
            时间刻度精度取为5秒
            </summary>
        </member>
        <member name="F:QJW.TimestampStyle.TenSecondTicks">
            <summary>
            时间刻度精度取为10秒
            </summary>
        </member>
        <member name="F:QJW.TimestampStyle.MinutesTicks">
            <summary>
            时间刻度精度取为1分种（60秒）
            </summary>
        </member>
        <member name="M:QJW.IpHelper.GetUserIp">
            <summary>
            获得用户IP
            </summary>
        </member>
        <member name="M:QJW.IpHelper.GetIP">
            <summary>
            获得当前页面客户端的IP
            </summary>
            <returns>当前页面客户端的IP</returns>
        </member>
        <member name="M:QJW.IpHelper.IsIP(System.String)">
            <summary>
            是否为ip
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.IpHelper.GetLocalIP">
            <summary>
            获取本地机器IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:QJW.IpHelper.IPtoNum(System.String)">
            <summary> 
            把IP地址转换为数字格式 
            </summary> 
            <param name="strIp">IP地址</param> 
            <returns>数字</returns> 
        </member>
        <member name="M:QJW.LoginUser.BuildUser(System.String)">
            <summary>
            从cookie读取用户信息
            </summary>
            <param name="cookieName"></param>
        </member>
        <member name="M:QJW.LoginUser.Logout(System.String)">
            <summary>
            退出cookie登录
            </summary>
        </member>
        <member name="M:QJW.QrCodeHelper.GetQrCode(System.String)">
            <summary>
            使用Gma.QrCodeNet.Encoding 组件
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.QrCodeHelper.GCode(System.String)">
            <summary>
            生成二维码.
            </summary>
            <param name="data">需要添加进去的文本</param>
            <returns></returns>
        </member>
        <member name="M:QJW.QrCodeHelper.CombinImage(System.Drawing.Image,System.String)">
            <summary>
            调用此函数后使此两种图片合并，类似相册，有个
            背景图，中间贴自己的目标图片
            </summary>
            <param name="sourceImg">粘贴的源图片</param>
            <param name="destImg">粘贴的目标图片</param>
        </member>
        <member name="M:QJW.QrCodeHelper.KiResizeImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32)">
            <summary>
            Resize图片
            </summary>
            <param name="bmp">原始Bitmap</param>
            <param name="newW">新的宽度</param>
            <param name="newH">新的高度</param>
            <param name="Mode">保留着，暂时未用</param>
            <returns>处理以后的图片</returns>
        </member>
        <member name="T:QJW.Rmb">
            <summary> 
            Rmb 的摘要说明。 
            </summary> 
        </member>
        <member name="M:QJW.Rmb.CmycurD(System.Decimal)">
            <summary> 
            转换人民币大小金额 
            </summary> 
            <param name="num">金额</param> 
            <returns>返回大写形式</returns> 
        </member>
        <member name="M:QJW.Rmb.CmycurD(System.String)">
            <summary> 
            一个重载，将字符串先转换成数字在调用CmycurD(decimal num) 
            </summary> 
            <param name="num">用户输入的金额，字符串形式未转成decimal</param> 
            <returns></returns> 
        </member>
        <member name="T:QJW.URLHelper">
            <summary>
            URL的操作类
            </summary>
        </member>
        <member name="M:QJW.URLHelper.IsBase64(System.String)">
            <summary>
            是否是Base64字符串
            </summary>
            <param name="eStr"></param>
            <returns></returns>
        </member>
        <member name="M:QJW.URLHelper.UrlEncode(System.String)">
            <summary>
            返回 URL 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:QJW.URLHelper.UrlDecode(System.String)">
            <summary>
            返回 URL 字符串的解码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:QJW.URLHelper.AddParam(System.String,System.String,System.String)">
            <summary>
            添加URL参数
            </summary>
        </member>
        <member name="M:QJW.URLHelper.UpdateParam(System.String,System.String,System.String)">
            <summary>
            更新URL参数
            </summary>
        </member>
        <member name="M:QJW.URLHelper.ParseUrl(System.String,System.String@,System.Collections.Specialized.NameValueCollection@)">
            <summary>
            分析 url 字符串中的参数信息
            </summary>
            <param name="url">输入的 URL</param>
            <param name="baseUrl">输出 URL 的基础部分</param>
            <param name="nvc">输出分析后得到的 (参数名,参数值) 的集合</param>
        </member>
        <member name="M:QJW.URLHelper.autoConvertToURL(System.Object)">
            <summary> 
            自动识别文本中的URL 
            可以识别 www.，http://， ftp://， xx@xx.xx， mms:// 
            </summary> 
            <param name="input">输入数据</param> 
            <returns>自动识别URL后的数据</returns> 
        </member>
        <member name="P:QJW.VerifyCode.ValidateCode.MaxLength">
            <summary>
            验证码的最大长度
            </summary>
        </member>
        <member name="P:QJW.VerifyCode.ValidateCode.MinLength">
            <summary>
            验证码的最小长度
            </summary>
        </member>
        <member name="M:QJW.VerifyCode.ValidateCode.CreateValidateCode(System.Int32)">
            <summary>
            生成验证码
            </summary>
            <param name="length">指定验证码的长度</param>
            <returns></returns>
        </member>
        <member name="M:QJW.VerifyCode.ValidateCode.CreateValidateGraphic(System.String)">
            <summary>
            创建验证码的图片
            </summary>
            <param name="containsPage">要输出到的page对象</param>
            <param name="validateNum">验证码</param>
        </member>
        <member name="M:QJW.VerifyCode.ValidateCode.GetImageWidth(System.Int32)">
            <summary>
            得到验证码图片的长度
            </summary>
            <param name="validateNumLength">验证码的长度</param>
            <returns></returns>
        </member>
        <member name="M:QJW.VerifyCode.ValidateCode.GetImageHeight">
            <summary>
            得到验证码的高度
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
